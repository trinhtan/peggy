{
  "contractName": "BridgeBank",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operatorAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oracleAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_cosmosBridgeAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "LogBridgeTokenMint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_to",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "LogBurn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "_to",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        }
      ],
      "name": "LogLock",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "LogNewBridgeToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "LogUnlock",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bridgeTokenCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "controlledBridgeTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cosmosBridge",
      "outputs": [
        {
          "internalType": "contract CosmosBridge",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "cosmosDeposits",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "cosmosSender",
          "type": "bytes"
        },
        {
          "internalType": "address payable",
          "name": "ethereumRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "bridgeTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "locked",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "getBridgeToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "getLockedFunds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "getLockedTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isCosmosAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lockBurnNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lockedFunds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "lockedTokenList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract Oracle",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "createNewBridgeToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_cosmosSender",
          "type": "bytes"
        },
        {
          "internalType": "address payable",
          "name": "_intendedRecipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_bridgeTokenAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mintBridgeTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_recipient",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_recipient",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "lock",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_recipient",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "unlock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        }
      ],
      "name": "getCosmosDepositStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        }
      ],
      "name": "viewCosmosDeposit",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "checkIsCosmosAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operatorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_cosmosBridgeAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"LogBridgeTokenMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_to\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"LogBurn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_to\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"}],\"name\":\"LogLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"LogNewBridgeToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"LogUnlock\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"bridgeTokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_recipient\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"checkIsCosmosAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"controlledBridgeTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cosmosBridge\",\"outputs\":[{\"internalType\":\"contract CosmosBridge\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"cosmosDeposits\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"cosmosSender\",\"type\":\"bytes\"},{\"internalType\":\"address payable\",\"name\":\"ethereumRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"bridgeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"createNewBridgeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"getBridgeToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"getCosmosDepositStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"getLockedFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"getLockedTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isCosmosAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_recipient\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockBurnNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedFunds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"lockedTokenList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_cosmosSender\",\"type\":\"bytes\"},{\"internalType\":\"address payable\",\"name\":\"_intendedRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_bridgeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintBridgeTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract Oracle\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unlock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"viewCosmosDeposit\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Bank contract which coordinates asset-related functionality.     CosmosBank manages the minting and burning of tokens which     represent Cosmos based assets, while EthereumBank manages     the locking and unlocking of Ethereum and ERC20 token assets     based on Ethereum.*\",\"methods\":{},\"title\":\"BridgeBank\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/chientm/go/src/github.com/cosmos/peggy/testnet-contracts/contracts/BridgeBank/BridgeBank.sol\":\"BridgeBank\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/chientm/go/src/github.com/cosmos/peggy/node_modules/openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"/Users/chientm/go/src/github.com/cosmos/peggy/node_modules/openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"/Users/chientm/go/src/github.com/cosmos/peggy/node_modules/openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xbe8eef6f2cb4e427f5c5d8a76865ccd06e55a4f1d6671ba312d45bfa705aedbf\",\"urls\":[\"bzz-raw://badf338a5e22c8658c01fe2ce89b487d9dbf6d2d9d5eb49df7415383e2498765\",\"dweb:/ipfs/QmP5aMkvFwMJyuQjKE8ADh5tkWYqonb4KjgkAjgYEVVFAv\"]},\"/Users/chientm/go/src/github.com/cosmos/peggy/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"/Users/chientm/go/src/github.com/cosmos/peggy/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb15af804e2bc97db51e4e103f13de9fe13f87e6b835d7a88c897966c0e58506e\",\"urls\":[\"bzz-raw://1e8cff8437557fc915a3bed968fcd8f2df9809599e665ef69c2c9ce628548055\",\"dweb:/ipfs/QmP5spYP8vs2jvLF8zNrXUbqB79hMsoEvMHiLcBxerWKcm\"]},\"/Users/chientm/go/src/github.com/cosmos/peggy/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x9b94356691f3cbf90a5d83ae3fdf6a5a662bb004d2bd8b034160d60221807e64\",\"urls\":[\"bzz-raw://14a9d33db455302b8bb9fdb28998efefbe5a1cb41b29e31391609f646b2ab351\",\"dweb:/ipfs/Qmd4wFr6GEMZnnxgXeq3gmp7cs8tqDuHp3TVNhCbjnux2V\"]},\"/Users/chientm/go/src/github.com/cosmos/peggy/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x4a3a810b7ebe742e897e1fd428b3eeed2196d3acea58eaf9c566ed10d545d2ed\",\"urls\":[\"bzz-raw://28d03f328e19e4099d5013de0649afaeaabac1a614e130767ab1cb4aca9775b6\",\"dweb:/ipfs/Qmb9iW7yNuYehB2NfhRMs9TakqbLVQhBhmGMkaDZ5g1Eb4\"]},\"/Users/chientm/go/src/github.com/cosmos/peggy/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xa2b957cf89692c504962afb7506999155f83385373f808243246cd5879de5940\",\"urls\":[\"bzz-raw://c44ae0ad1bce141c33b962f8b4e9228bdf8df36c8ac363b4f0bf9498b8bfc32a\",\"dweb:/ipfs/QmcSBRdFwVvy2wFZrBwo5cvqNP4UHh9Eyzf8jnxBgnPqfe\"]},\"/Users/chientm/go/src/github.com/cosmos/peggy/node_modules/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"/Users/chientm/go/src/github.com/cosmos/peggy/testnet-contracts/contracts/BridgeBank/BridgeBank.sol\":{\"keccak256\":\"0x43beda117e11f30cf72763bc5079a2862d497c19057dee2ea49e4cbd61c382bd\",\"urls\":[\"bzz-raw://4dd8e8d0ad12107f4fff3173a751ee1a830ec3c7740badb73c92621ecafd4dae\",\"dweb:/ipfs/QmZ3EbTrVU2fjckcJ5wnPXoeFyD3w7e8CVeMFJdjrCBKQ2\"]},\"/Users/chientm/go/src/github.com/cosmos/peggy/testnet-contracts/contracts/BridgeBank/BridgeToken.sol\":{\"keccak256\":\"0xece806787c2c2daadcb3d6652285a281764148ff9099cb875301fd10e7949ea4\",\"urls\":[\"bzz-raw://aff6cd92460e60ea810a2f98243540576dedfc1912fdd2ea41434de95ac8ac36\",\"dweb:/ipfs/QmT5qNHMDBfteKSKAX3TzmjQbJbP4A1DE9jmfbnnXgG2ZD\"]},\"/Users/chientm/go/src/github.com/cosmos/peggy/testnet-contracts/contracts/BridgeBank/CosmosBank.sol\":{\"keccak256\":\"0x8f6073ab44d203fa94f40f528b1876166b402d2c141f2585c8aaf638262658b9\",\"urls\":[\"bzz-raw://5a3cee4f40ef4d37ef4fd6563816e454c474e9479ec434c86b2cb62939202a95\",\"dweb:/ipfs/QmVcnLt95tu9QcTTs2LZtHNeoLtLAvKWDV52vH27uVkPFv\"]},\"/Users/chientm/go/src/github.com/cosmos/peggy/testnet-contracts/contracts/BridgeBank/EthereumBank.sol\":{\"keccak256\":\"0x00eee962eae682f8e2b79d2811ac5e0ca13ec3676ab6af0fefc4fbabad64c963\",\"urls\":[\"bzz-raw://97829a34afdca09a01372d7a81f0bad8e72a27fa335269f4b34afd324b4ad189\",\"dweb:/ipfs/QmT5hstQ4kKGrmt38cnGgM63eiiaSFCaDJthf3J2kopf29\"]},\"/Users/chientm/go/src/github.com/cosmos/peggy/testnet-contracts/contracts/CosmosBridge.sol\":{\"keccak256\":\"0x1e35470bb011b74e5ef65eaa0efdd39f8ebce72ee94d03f94dbf8cd36ef496e8\",\"urls\":[\"bzz-raw://a278ce3adc1c17c9ee5a66e15aa5039b49a6fc6407a87263bc3f19532f28d930\",\"dweb:/ipfs/QmdtDmYwhFuJ4JrXSEwWYRXMNXAaDHbtf6YqqqWbniKG7J\"]},\"/Users/chientm/go/src/github.com/cosmos/peggy/testnet-contracts/contracts/Oracle.sol\":{\"keccak256\":\"0xbc092f8079f8520b2ca4dd9a8e5ba97a8b43e3e2cb1dd6b4b6b563bcf55f5d79\",\"urls\":[\"bzz-raw://3f4eddada396adb268ccb8fad75c89aa0f0c7befa20e0d14ef139d796b588649\",\"dweb:/ipfs/Qmbf9ivYnuc1ppcNcZ6wtqELthnL9vh1xKvGoPHkiMp23N\"]},\"/Users/chientm/go/src/github.com/cosmos/peggy/testnet-contracts/contracts/Valset.sol\":{\"keccak256\":\"0xb97bdcc7f392298045864e937298d579107cdc81292f010dfadf8ea29ecaa604\",\"urls\":[\"bzz-raw://16aa9d7fa479800ddc9653782e48a8d6a113e03bdc4e422de38fb889a72802bd\",\"dweb:/ipfs/QmdYH7pWF6zpgJdzNoqhBFnPp5inN5XWourfpKvae8mLpK\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405162006013380380620060138339818101604052606081101561003557600080fd5b8101908080519060200190929190805190602001909291908051906020019092919050505060008081905550600060038190555082600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050615ed4806200013f6000396000f3fe608060405260043610620001465760003560e01c806381f59c5611620000bb578063cdf68c411162000079578063cdf68c411462000c0f578063dc9ae17d1462000dc2578063e05988a41462000ebb578063e06064f41462000fb4578063ebb73ca9146200100b578063f24a590a146200111a5762000146565b806381f59c5614620008e5578063884d58d414620009525780639df2a3851462000a61578063b0e9ef711462000b4c578063b86247d71462000ba65762000146565b8063328470ab1162000109578063328470ab146200061157806350b06e4d146200063f578063570ca735146200074e5780635acba65514620007a85780637dc0d1d0146200088b5762000146565b80630a1f9b66146200020c57806312e49390146200031b5780631deed3bb146200044e5780632054c273146200047c5780632852a41414620004e9575b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200020a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4d7573742062652042726964676542616e6b206f70657261746f722e0000000081525060200191505060405180910390fd5b005b3480156200021957600080fd5b50620002d9600480360360208110156200023257600080fd5b81019080803590602001906401000000008111156200025057600080fd5b8201836020820111156200026357600080fd5b803590602001918460018302840111640100000000831117156200028657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505062001229565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200032857600080fd5b5062000358600480360360208110156200034157600080fd5b8101908080359060200190929190505050620012be565b60405180806020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183151515158152602001828103825287818151815260200191508051906020019080838360005b838110156200040e578082015181840152602081019050620003f1565b50505050905090810190601f1680156200043c5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b3480156200045b57600080fd5b5062000466620013dd565b6040518082815260200191505060405180910390f35b3480156200048957600080fd5b50620004cf60048036036020811015620004a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620013e3565b604051808215151515815260200191505060405180910390f35b348015620004f657600080fd5b5062000526600480360360208110156200050f57600080fd5b810190808035906020019092919050505062001403565b60405180806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828103825286818151815260200191508051906020019080838360005b83811015620005d2578082015181840152602081019050620005b5565b50505050905090810190601f168015620006005780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b3480156200061e57600080fd5b506200062962001424565b6040518082815260200191505060405180910390f35b3480156200064c57600080fd5b506200070c600480360360208110156200066557600080fd5b81019080803590602001906401000000008111156200068357600080fd5b8201836020820111156200069657600080fd5b80359060200191846001830284011164010000000083111715620006b957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506200142a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200075b57600080fd5b506200076662001544565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620007b557600080fd5b506200087560048036036020811015620007ce57600080fd5b8101908080359060200190640100000000811115620007ec57600080fd5b820183602082011115620007ff57600080fd5b803590602001918460018302840111640100000000831117156200082257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506200156a565b6040518082815260200191505060405180910390f35b3480156200089857600080fd5b50620008a36200163e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620008f257600080fd5b5062000938600480360360208110156200090b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001664565b604051808215151515815260200191505060405180910390f35b3480156200095f57600080fd5b5062000a1f600480360360208110156200097857600080fd5b81019080803590602001906401000000008111156200099657600080fd5b820183602082011115620009a957600080fd5b80359060200191846001830284011164010000000083111715620009cc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050620016cd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62000b4a6004803603606081101562000a7957600080fd5b810190808035906020019064010000000081111562000a9757600080fd5b82018360208201111562000aaa57600080fd5b8035906020019184600183028401116401000000008311171562000acd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062001716565b005b34801562000b5957600080fd5b5062000b6462001d9c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801562000bb357600080fd5b5062000bf96004803603602081101562000bcc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001dc2565b6040518082815260200191505060405180910390f35b34801562000c1c57600080fd5b5062000dc0600480360360a081101562000c3557600080fd5b810190808035906020019064010000000081111562000c5357600080fd5b82018360208201111562000c6657600080fd5b8035906020019184600183028401116401000000008311171562000c8957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111562000d2d57600080fd5b82018360208201111562000d4057600080fd5b8035906020019184600183028401116401000000008311171562000d6357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919050505062001dda565b005b34801562000dcf57600080fd5b5062000eb96004803603606081101562000de857600080fd5b810190808035906020019064010000000081111562000e0657600080fd5b82018360208201111562000e1957600080fd5b8035906020019184600183028401116401000000008311171562000e3c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062001e98565b005b34801562000ec857600080fd5b5062000fb26004803603606081101562000ee157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111562000f1f57600080fd5b82018360208201111562000f3257600080fd5b8035906020019184600183028401116401000000008311171562000f5557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919050505062002117565b005b34801562000fc157600080fd5b5062000ff16004803603602081101562000fda57600080fd5b810190808035906020019092919050505062002475565b604051808215151515815260200191505060405180910390f35b3480156200101857600080fd5b50620010d8600480360360208110156200103157600080fd5b81019080803590602001906401000000008111156200104f57600080fd5b8201836020820111156200106257600080fd5b803590602001918460018302840111640100000000831117156200108557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505062002489565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200112757600080fd5b50620011e7600480360360208110156200114057600080fd5b81019080803590602001906401000000008111156200115e57600080fd5b8201836020820111156200117157600080fd5b803590602001918460018302840111640100000000831117156200119457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506200251e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60006005826040518082805190602001908083835b602083106200126357805182526020820191506020810190506020830392506200123e565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6002602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200136e5780601f1062001342576101008083540402835291602001916200136e565b820191906000526020600020905b8154815290600101906020018083116200135057829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900460ff16905085565b60035481565b60096020528060005260406000206000915054906101000a900460ff1681565b60606000806000620014158562002567565b93509350935093509193509193565b60005481565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620014d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018062005d0a6026913960400191505060405180910390fd5b6000620014e18362002736565b90506001600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080915050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460006005846040518082805190602001908083835b60208310620015a8578051825260208201915060208101905060208303925062001583565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615620016c35760019050620016c8565b600090505b919050565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003546001600354011162001793576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4e6f20617661696c61626c65206e6f6e6365732e00000000000000000000000081525060200191505060405180910390fd5b60606000341115620018cd57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161462001826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604481526020018062005d9d6044913960600191505060405180910390fd5b81341462001880576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604281526020018062005d5b6042913960600191505060405180910390fd5b6040518060400160405280600381526020017f45544800000000000000000000000000000000000000000000000000000000008152509050620018c7338585848662002985565b62001d96565b8273ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156200191457600080fd5b505afa15801562001929573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200195457600080fd5b81019080805160405193929190846401000000008211156200197557600080fd5b838201915060208201858111156200198c57600080fd5b8251866001820283011164010000000082111715620019aa57600080fd5b8083526020830192505050908051906020019080838360005b83811015620019e0578082015181840152602081019050620019c3565b50505050905090810190601f16801562001a0e5780820380516001836020036101000a031916815260200191505b506040525050509050600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161562001c3557818373ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801562001ae957600080fd5b505afa15801562001afe573d6000803e3d6000fd5b505050506040513d602081101562001b1557600080fd5b8101908080519060200190929190505050101562001b7f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604481526020018062005e5c6044913960600191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166379cc679033846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801562001c0757600080fd5b505af115801562001c1c573d6000803e3d6000fd5b5050505062001c2f338585848662002c74565b62001d95565b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801562001cf157600080fd5b505af115801562001d06573d6000803e3d6000fd5b505050506040513d602081101562001d1d57600080fd5b810190808051906020019092919050505062001d85576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604481526020018062005e5c6044913960600191505060405180910390fd5b62001d94338585848662002985565b5b5b50505050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915090505481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462001e82576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018062005d0a6026913960400191505060405180910390fd5b62001e91858585858562002e22565b5050505050565b6003546001600354011162001f15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4e6f20617661696c61626c65206e6f6e6365732e00000000000000000000000081525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166379cc679033836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801562001f9d57600080fd5b505af115801562001fb2573d6000803e3d6000fd5b5050505060608273ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801562001fff57600080fd5b505afa15801562002014573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200203f57600080fd5b81019080805160405193929190846401000000008211156200206057600080fd5b838201915060208201858111156200207757600080fd5b82518660018202830111640100000000821117156200209557600080fd5b8083526020830192505050908051906020019080838360005b83811015620020cb578082015181840152602081019050620020ae565b50505050905090810190601f168015620020f95780820380516001836020036101000a031916815260200191505b50604052505050905062002111338585848662003174565b50505050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620021bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018062005d0a6026913960400191505060405180910390fd5b80620021cb836200156a565b101562002224576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604481526020018062005cc66044913960600191505060405180910390fd5b60006005836040518082805190602001908083835b602083106200225e578051825260208201915060208101905060208303925062002239565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200234b578147101562002345576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018062005d30602b913960400191505060405180910390fd5b62002461565b818173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015620023ca57600080fd5b505afa158015620023df573d6000803e3d6000fd5b505050506040513d6020811015620023f657600080fd5b8101908080519060200190929190505050101562002460576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018062005e07602e913960400191505060405180910390fd5b5b6200246f8482858562003322565b50505050565b600062002482826200368b565b9050919050565b60006001826040518082805190602001908083835b60208310620024c357805182526020820191506020810190506020830392506200249e565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6005818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060008060006200257862003a8f565b600260008781526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620026335780601f10620026075761010080835404028352916020019162002633565b820191906000526020600020905b8154815290600101906020018083116200261557829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900460ff161515151581525050905080600001518160200151826040015183606001518393509450945094509450509193509193565b6000620027506001600054620036b890919063ffffffff16565b600081905550600082604051620027679062003aec565b8080602001828103825283818151815260200191508051906020019080838360005b83811015620027a657808201518184015260208101905062002789565b50505050905090810190601f168015620027d45780820380516001836020036101000a031916815260200191505b5092505050604051809103906000f080158015620027f6573d6000803e3d6000fd5b5090506000819050806001856040518082805190602001908083835b6020831062002837578051825260208201915060208101905060208303925062002812565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0ec4ab372af15f8db6003eb14d91402a44b20dff79fbac33b4ee0df68fafe9c08185604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156200293f57808201518184015260208101905062002922565b50505050905090810190601f1680156200296d5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a18092505050919050565b6200299d6001600354620036b890919063ffffffff16565b600381905550826005836040518082805190602001908083835b60208310620029dc5780518252602082019150602081019050602083039250620029b7565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062002aa181600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620036b890919063ffffffff16565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f374449c83a37309524754bbdfc5b8306d3694b5d14609b8fbb1b50cc5c0319a78585858585600354604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001858152602001848152602001838103835288818151815260200191508051906020019080838360005b8381101562002bc357808201518184015260208101905062002ba6565b50505050905090810190601f16801562002bf15780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b8381101562002c2c57808201518184015260208101905062002c0f565b50505050905090810190601f16801562002c5a5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a15050505050565b62002c8c6001600354620036b890919063ffffffff16565b6003819055507f374449c83a37309524754bbdfc5b8306d3694b5d14609b8fbb1b50cc5c0319a78585858585600354604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001858152602001848152602001838103835288818151815260200191508051906020019080838360005b8381101562002d7157808201518184015260208101905062002d54565b50505050905090810190601f16801562002d9f5780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b8381101562002dda57808201518184015260208101905062002dbd565b50505050905090810190601f16801562002e085780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a15050505050565b8273ffffffffffffffffffffffffffffffffffffffff166001836040518082805190602001908083835b6020831062002e71578051825260208201915060208101905060208303925062002e4c565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462002f33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602781526020018062005e356027913960400191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166340c10f1985836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801562002fbb57600080fd5b505af115801562002fd0573d6000803e3d6000fd5b505050506040513d602081101562002fe757600080fd5b81019080805190602001909291905050506200304f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018062005de16026913960400191505060405180910390fd5b6200305d8585858462003741565b507f262f97360779b7c2bb05fd24ef49f22d51435f78d3abd1ab35c323b22064cd4d83838387604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825285818151815260200191508051906020019080838360005b838110156200312f57808201518184015260208101905062003112565b50505050905090810190601f1680156200315d5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a15050505050565b6200318c6001600354620036b890919063ffffffff16565b6003819055507fcff57df3b42f67919a9300d211bb7fe56104ca34949da91116a8f82ff51bb7778585858585600354604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001858152602001848152602001838103835288818151815260200191508051906020019080838360005b838110156200327157808201518184015260208101905062003254565b50505050905090810190601f1680156200329f5780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b83811015620032da578082015181840152602081019050620032bd565b50505050905090810190601f168015620033085780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a15050505050565b6200337681600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200397f90919063ffffffff16565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156200343d578373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801562003436573d6000803e3d6000fd5b5062003576565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015620034c557600080fd5b505af1158015620034da573d6000803e3d6000fd5b505050506040513d6020811015620034f157600080fd5b810190808051906020019092919050505062003575576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f546f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b5b7f802cd873de701272ec903860b690986bd460b5bcd57e30ac1fdfdeece10528ac84848484604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015620036475780820151818401526020810190506200362a565b50505050905090810190601f168015620036755780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a150505050565b60006002600083815260200190815260200160002060040160009054906101000a900460ff169050919050565b60008082840190508381101562003737576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600080858585856040516020018085805190602001908083835b602083106200378057805182526020820191506020810190506020830392506200375b565b6001836020036101000a0380198251168184511680821785525050505050509050018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018281526020019450505050506040516020818303038152906040528051906020012090506040518060a001604052808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200160011515815250600260008381526020019081526020016000206000820151816000019080519060200190620038b792919062003afa565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555090505080915050949350505050565b6000620039c383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250620039cb565b905092915050565b600083831115829062003a7c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101562003a4057808201518184015260208101905062003a23565b50505050905090810190601f16801562003a6e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6040518060a0016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b61211c8062003baa83390190565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062003b3d57805160ff191683800117855562003b6e565b8280016001018555821562003b6e579182015b8281111562003b6d57825182559160200191906001019062003b50565b5b50905062003b7d919062003b81565b5090565b62003ba691905b8082111562003ba257600081600090555060010162003b88565b5090565b9056fe60806040523480156200001157600080fd5b506040516200211c3803806200211c833981810160405260208110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052505050808160126200011c620001106200017360201b60201c565b6200017b60201b60201c565b826004908051906020019062000134929190620003a0565b5081600590805190602001906200014d929190620003a0565b5080600660006101000a81548160ff021916908360ff160217905550505050506200044f565b600033905090565b62000196816003620001dc60201b620018f31790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b620001ee8282620002c060201b60201c565b1562000262576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000349576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180620020fa6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003e357805160ff191683800117855562000414565b8280016001018555821562000414579182015b8281111562000413578251825591602001919060010190620003f6565b5b50905062000423919062000427565b5090565b6200044c91905b80821115620004485760008160009055506001016200042e565b5090565b90565b611c9b806200045f6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a257806398650275116100715780639865027514610528578063a457c2d714610532578063a9059cbb14610598578063aa271e1a146105fe578063dd62ed3e1461065a5761010b565b806370a08231146103bb57806379cc67901461041357806395d89b4114610461578063983b2d56146104e45761010b565b8063313ce567116100de578063313ce5671461029d57806339509351146102c157806340c10f191461032757806342966c681461038d5761010b565b806306fdde0314610110578063095ea7b31461019357806318160ddd146101f957806323b872dd14610217575b600080fd5b6101186106d2565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015857808201518184015260208101905061013d565b50505050905090810190601f1680156101855780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101df600480360360408110156101a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610774565b604051808215151515815260200191505060405180910390f35b610201610792565b6040518082815260200191505060405180910390f35b6102836004803603606081101561022d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061079c565b604051808215151515815260200191505060405180910390f35b6102a5610875565b604051808260ff1660ff16815260200191505060405180910390f35b61030d600480360360408110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061088c565b604051808215151515815260200191505060405180910390f35b6103736004803603604081101561033d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061093f565b604051808215151515815260200191505060405180910390f35b6103b9600480360360208110156103a357600080fd5b81019080803590602001909291905050506109ba565b005b6103fd600480360360208110156103d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109ce565b6040518082815260200191505060405180910390f35b61045f6004803603604081101561042957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a16565b005b610469610a24565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104a957808201518184015260208101905061048e565b50505050905090810190601f1680156104d65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610526600480360360208110156104fa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ac6565b005b610530610b37565b005b61057e6004803603604081101561054857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b49565b604051808215151515815260200191505060405180910390f35b6105e4600480360360408110156105ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c16565b604051808215151515815260200191505060405180910390f35b6106406004803603602081101561061457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c34565b604051808215151515815260200191505060405180910390f35b6106bc6004803603604081101561067057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c51565b6040518082815260200191505060405180910390f35b606060048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561076a5780601f1061073f5761010080835404028352916020019161076a565b820191906000526020600020905b81548152906001019060200180831161074d57829003601f168201915b5050505050905090565b6000610788610781610cd8565b8484610ce0565b6001905092915050565b6000600254905090565b60006107a9848484610ed7565b61086a846107b5610cd8565b61086585604051806060016040528060288152602001611b6a60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061081b610cd8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461118d9092919063ffffffff16565b610ce0565b600190509392505050565b6000600660009054906101000a900460ff16905090565b6000610935610899610cd8565b8461093085600160006108aa610cd8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461124d90919063ffffffff16565b610ce0565b6001905092915050565b600061095161094c610cd8565b610c34565b6109a6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180611b196030913960400191505060405180910390fd5b6109b083836112d5565b6001905092915050565b6109cb6109c5610cd8565b82611490565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610a208282611648565b5050565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610abc5780601f10610a9157610100808354040283529160200191610abc565b820191906000526020600020905b815481529060010190602001808311610a9f57829003601f168201915b5050505050905090565b610ad6610ad1610cd8565b610c34565b610b2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180611b196030913960400191505060405180910390fd5b610b3481611717565b50565b610b47610b42610cd8565b611771565b565b6000610c0c610b56610cd8565b84610c0785604051806060016040528060258152602001611c426025913960016000610b80610cd8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461118d9092919063ffffffff16565b610ce0565b6001905092915050565b6000610c2a610c23610cd8565b8484610ed7565b6001905092915050565b6000610c4a8260036117cb90919063ffffffff16565b9050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611c1e6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611ad16022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611bf96025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fe3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611a8c6023913960400191505060405180910390fd5b61104e81604051806060016040528060268152602001611af3602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461118d9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110e1816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461124d90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600083831115829061123a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156111ff5780820151818401526020810190506111e4565b50505050905090810190601f16801561122c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808284019050838110156112cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611378576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61138d8160025461124d90919063ffffffff16565b6002819055506113e4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461124d90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611516576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611bd86021913960400191505060405180910390fd5b61158181604051806060016040528060228152602001611aaf602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461118d9092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115d8816002546118a990919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6116528282611490565b6117138261165e610cd8565b61170e84604051806060016040528060248152602001611bb460249139600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006116c4610cd8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461118d9092919063ffffffff16565b610ce0565b5050565b61172b8160036118f390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6117858160036119ce90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611852576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611b926022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006118eb83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061118d565b905092915050565b6118fd82826117cb565b15611970576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6119d882826117cb565b611a2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611b496021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158205a381057d9cb9473e02c23337f144bac19ba1a48d30b8e778b11e922e1d7376664736f6c63430005100032526f6c65733a206163636f756e7420697320746865207a65726f20616464726573735468652042616e6b20646f6573206e6f7420686f6c6420656e6f756768206c6f636b656420746f6b656e7320746f2066756c66696c6c207468697320726571756573742e416363657373207265737472696374656420746f2074686520636f736d6f7320627269646765496e73756666696369656e7420657468657265756d2062616c616e636520666f722064656c69766572792e546865207472616e73616374696f6e732076616c7565206d75737420626520657175616c207468652073706563696669656420616d6f756e742028696e2077656929457468657265756d206465706f736974732072657175697265207468652027746f6b656e27206164647265737320746f20626520746865206e756c6c2061646472657373417474656d70746564206d696e74206f662062726964676520746f6b656e73206661696c6564496e73756666696369656e7420455243323020746f6b656e2062616c616e636520666f722064656c69766572792e546f6b656e206d757374206265206120636f6e74726f6c6c65642062726964676520746f6b656e436f6e747261637420746f6b656e20616c6c6f77616e63657320696e73756666696369656e7420746f20636f6d706c6574652074686973206c6f636b2072657175657374a265627a7a7231582075e70f948303aa4f186e5a1cdb2ce5b6be915fac8c8e764efec42a10d4a1676564736f6c63430005100032",
  "deployedBytecode": "0x608060405260043610620001465760003560e01c806381f59c5611620000bb578063cdf68c411162000079578063cdf68c411462000c0f578063dc9ae17d1462000dc2578063e05988a41462000ebb578063e06064f41462000fb4578063ebb73ca9146200100b578063f24a590a146200111a5762000146565b806381f59c5614620008e5578063884d58d414620009525780639df2a3851462000a61578063b0e9ef711462000b4c578063b86247d71462000ba65762000146565b8063328470ab1162000109578063328470ab146200061157806350b06e4d146200063f578063570ca735146200074e5780635acba65514620007a85780637dc0d1d0146200088b5762000146565b80630a1f9b66146200020c57806312e49390146200031b5780631deed3bb146200044e5780632054c273146200047c5780632852a41414620004e9575b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200020a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4d7573742062652042726964676542616e6b206f70657261746f722e0000000081525060200191505060405180910390fd5b005b3480156200021957600080fd5b50620002d9600480360360208110156200023257600080fd5b81019080803590602001906401000000008111156200025057600080fd5b8201836020820111156200026357600080fd5b803590602001918460018302840111640100000000831117156200028657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505062001229565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200032857600080fd5b5062000358600480360360208110156200034157600080fd5b8101908080359060200190929190505050620012be565b60405180806020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183151515158152602001828103825287818151815260200191508051906020019080838360005b838110156200040e578082015181840152602081019050620003f1565b50505050905090810190601f1680156200043c5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b3480156200045b57600080fd5b5062000466620013dd565b6040518082815260200191505060405180910390f35b3480156200048957600080fd5b50620004cf60048036036020811015620004a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050620013e3565b604051808215151515815260200191505060405180910390f35b348015620004f657600080fd5b5062000526600480360360208110156200050f57600080fd5b810190808035906020019092919050505062001403565b60405180806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828103825286818151815260200191508051906020019080838360005b83811015620005d2578082015181840152602081019050620005b5565b50505050905090810190601f168015620006005780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b3480156200061e57600080fd5b506200062962001424565b6040518082815260200191505060405180910390f35b3480156200064c57600080fd5b506200070c600480360360208110156200066557600080fd5b81019080803590602001906401000000008111156200068357600080fd5b8201836020820111156200069657600080fd5b80359060200191846001830284011164010000000083111715620006b957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506200142a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200075b57600080fd5b506200076662001544565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620007b557600080fd5b506200087560048036036020811015620007ce57600080fd5b8101908080359060200190640100000000811115620007ec57600080fd5b820183602082011115620007ff57600080fd5b803590602001918460018302840111640100000000831117156200082257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506200156a565b6040518082815260200191505060405180910390f35b3480156200089857600080fd5b50620008a36200163e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620008f257600080fd5b5062000938600480360360208110156200090b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001664565b604051808215151515815260200191505060405180910390f35b3480156200095f57600080fd5b5062000a1f600480360360208110156200097857600080fd5b81019080803590602001906401000000008111156200099657600080fd5b820183602082011115620009a957600080fd5b80359060200191846001830284011164010000000083111715620009cc57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050620016cd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b62000b4a6004803603606081101562000a7957600080fd5b810190808035906020019064010000000081111562000a9757600080fd5b82018360208201111562000aaa57600080fd5b8035906020019184600183028401116401000000008311171562000acd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062001716565b005b34801562000b5957600080fd5b5062000b6462001d9c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801562000bb357600080fd5b5062000bf96004803603602081101562000bcc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001dc2565b6040518082815260200191505060405180910390f35b34801562000c1c57600080fd5b5062000dc0600480360360a081101562000c3557600080fd5b810190808035906020019064010000000081111562000c5357600080fd5b82018360208201111562000c6657600080fd5b8035906020019184600183028401116401000000008311171562000c8957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111562000d2d57600080fd5b82018360208201111562000d4057600080fd5b8035906020019184600183028401116401000000008311171562000d6357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919050505062001dda565b005b34801562000dcf57600080fd5b5062000eb96004803603606081101562000de857600080fd5b810190808035906020019064010000000081111562000e0657600080fd5b82018360208201111562000e1957600080fd5b8035906020019184600183028401116401000000008311171562000e3c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062001e98565b005b34801562000ec857600080fd5b5062000fb26004803603606081101562000ee157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111562000f1f57600080fd5b82018360208201111562000f3257600080fd5b8035906020019184600183028401116401000000008311171562000f5557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919050505062002117565b005b34801562000fc157600080fd5b5062000ff16004803603602081101562000fda57600080fd5b810190808035906020019092919050505062002475565b604051808215151515815260200191505060405180910390f35b3480156200101857600080fd5b50620010d8600480360360208110156200103157600080fd5b81019080803590602001906401000000008111156200104f57600080fd5b8201836020820111156200106257600080fd5b803590602001918460018302840111640100000000831117156200108557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505062002489565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156200112757600080fd5b50620011e7600480360360208110156200114057600080fd5b81019080803590602001906401000000008111156200115e57600080fd5b8201836020820111156200117157600080fd5b803590602001918460018302840111640100000000831117156200119457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506200251e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60006005826040518082805190602001908083835b602083106200126357805182526020820191506020810190506020830392506200123e565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6002602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156200136e5780601f1062001342576101008083540402835291602001916200136e565b820191906000526020600020905b8154815290600101906020018083116200135057829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900460ff16905085565b60035481565b60096020528060005260406000206000915054906101000a900460ff1681565b60606000806000620014158562002567565b93509350935093509193509193565b60005481565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620014d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018062005d0a6026913960400191505060405180910390fd5b6000620014e18362002736565b90506001600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080915050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460006005846040518082805190602001908083835b60208310620015a8578051825260208201915060208101905060208303925062001583565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615620016c35760019050620016c8565b600090505b919050565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003546001600354011162001793576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4e6f20617661696c61626c65206e6f6e6365732e00000000000000000000000081525060200191505060405180910390fd5b60606000341115620018cd57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161462001826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604481526020018062005d9d6044913960600191505060405180910390fd5b81341462001880576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604281526020018062005d5b6042913960600191505060405180910390fd5b6040518060400160405280600381526020017f45544800000000000000000000000000000000000000000000000000000000008152509050620018c7338585848662002985565b62001d96565b8273ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156200191457600080fd5b505afa15801562001929573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200195457600080fd5b81019080805160405193929190846401000000008211156200197557600080fd5b838201915060208201858111156200198c57600080fd5b8251866001820283011164010000000082111715620019aa57600080fd5b8083526020830192505050908051906020019080838360005b83811015620019e0578082015181840152602081019050620019c3565b50505050905090810190601f16801562001a0e5780820380516001836020036101000a031916815260200191505b506040525050509050600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161562001c3557818373ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801562001ae957600080fd5b505afa15801562001afe573d6000803e3d6000fd5b505050506040513d602081101562001b1557600080fd5b8101908080519060200190929190505050101562001b7f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604481526020018062005e5c6044913960600191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166379cc679033846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801562001c0757600080fd5b505af115801562001c1c573d6000803e3d6000fd5b5050505062001c2f338585848662002c74565b62001d95565b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801562001cf157600080fd5b505af115801562001d06573d6000803e3d6000fd5b505050506040513d602081101562001d1d57600080fd5b810190808051906020019092919050505062001d85576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604481526020018062005e5c6044913960600191505060405180910390fd5b62001d94338585848662002985565b5b5b50505050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915090505481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462001e82576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018062005d0a6026913960400191505060405180910390fd5b62001e91858585858562002e22565b5050505050565b6003546001600354011162001f15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4e6f20617661696c61626c65206e6f6e6365732e00000000000000000000000081525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166379cc679033836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801562001f9d57600080fd5b505af115801562001fb2573d6000803e3d6000fd5b5050505060608273ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801562001fff57600080fd5b505afa15801562002014573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156200203f57600080fd5b81019080805160405193929190846401000000008211156200206057600080fd5b838201915060208201858111156200207757600080fd5b82518660018202830111640100000000821117156200209557600080fd5b8083526020830192505050908051906020019080838360005b83811015620020cb578082015181840152602081019050620020ae565b50505050905090810190601f168015620020f95780820380516001836020036101000a031916815260200191505b50604052505050905062002111338585848662003174565b50505050565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620021bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018062005d0a6026913960400191505060405180910390fd5b80620021cb836200156a565b101562002224576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604481526020018062005cc66044913960600191505060405180910390fd5b60006005836040518082805190602001908083835b602083106200225e578051825260208201915060208101905060208303925062002239565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200234b578147101562002345576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b81526020018062005d30602b913960400191505060405180910390fd5b62002461565b818173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015620023ca57600080fd5b505afa158015620023df573d6000803e3d6000fd5b505050506040513d6020811015620023f657600080fd5b8101908080519060200190929190505050101562002460576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018062005e07602e913960400191505060405180910390fd5b5b6200246f8482858562003322565b50505050565b600062002482826200368b565b9050919050565b60006001826040518082805190602001908083835b60208310620024c357805182526020820191506020810190506020830392506200249e565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6005818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060008060006200257862003a8f565b600260008781526020019081526020016000206040518060a0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015620026335780601f10620026075761010080835404028352916020019162002633565b820191906000526020600020905b8154815290600101906020018083116200261557829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900460ff161515151581525050905080600001518160200151826040015183606001518393509450945094509450509193509193565b6000620027506001600054620036b890919063ffffffff16565b600081905550600082604051620027679062003aec565b8080602001828103825283818151815260200191508051906020019080838360005b83811015620027a657808201518184015260208101905062002789565b50505050905090810190601f168015620027d45780820380516001836020036101000a031916815260200191505b5092505050604051809103906000f080158015620027f6573d6000803e3d6000fd5b5090506000819050806001856040518082805190602001908083835b6020831062002837578051825260208201915060208101905060208303925062002812565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0ec4ab372af15f8db6003eb14d91402a44b20dff79fbac33b4ee0df68fafe9c08185604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b838110156200293f57808201518184015260208101905062002922565b50505050905090810190601f1680156200296d5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a18092505050919050565b6200299d6001600354620036b890919063ffffffff16565b600381905550826005836040518082805190602001908083835b60208310620029dc5780518252602082019150602081019050602083039250620029b7565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062002aa181600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620036b890919063ffffffff16565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f374449c83a37309524754bbdfc5b8306d3694b5d14609b8fbb1b50cc5c0319a78585858585600354604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001858152602001848152602001838103835288818151815260200191508051906020019080838360005b8381101562002bc357808201518184015260208101905062002ba6565b50505050905090810190601f16801562002bf15780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b8381101562002c2c57808201518184015260208101905062002c0f565b50505050905090810190601f16801562002c5a5780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a15050505050565b62002c8c6001600354620036b890919063ffffffff16565b6003819055507f374449c83a37309524754bbdfc5b8306d3694b5d14609b8fbb1b50cc5c0319a78585858585600354604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001858152602001848152602001838103835288818151815260200191508051906020019080838360005b8381101562002d7157808201518184015260208101905062002d54565b50505050905090810190601f16801562002d9f5780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b8381101562002dda57808201518184015260208101905062002dbd565b50505050905090810190601f16801562002e085780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a15050505050565b8273ffffffffffffffffffffffffffffffffffffffff166001836040518082805190602001908083835b6020831062002e71578051825260208201915060208101905060208303925062002e4c565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161462002f33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602781526020018062005e356027913960400191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166340c10f1985836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801562002fbb57600080fd5b505af115801562002fd0573d6000803e3d6000fd5b505050506040513d602081101562002fe757600080fd5b81019080805190602001909291905050506200304f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018062005de16026913960400191505060405180910390fd5b6200305d8585858462003741565b507f262f97360779b7c2bb05fd24ef49f22d51435f78d3abd1ab35c323b22064cd4d83838387604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825285818151815260200191508051906020019080838360005b838110156200312f57808201518184015260208101905062003112565b50505050905090810190601f1680156200315d5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a15050505050565b6200318c6001600354620036b890919063ffffffff16565b6003819055507fcff57df3b42f67919a9300d211bb7fe56104ca34949da91116a8f82ff51bb7778585858585600354604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001858152602001848152602001838103835288818151815260200191508051906020019080838360005b838110156200327157808201518184015260208101905062003254565b50505050905090810190601f1680156200329f5780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b83811015620032da578082015181840152602081019050620032bd565b50505050905090810190601f168015620033085780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a15050505050565b6200337681600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200397f90919063ffffffff16565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156200343d578373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801562003436573d6000803e3d6000fd5b5062003576565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015620034c557600080fd5b505af1158015620034da573d6000803e3d6000fd5b505050506040513d6020811015620034f157600080fd5b810190808051906020019092919050505062003575576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f546f6b656e207472616e73666572206661696c6564000000000000000000000081525060200191505060405180910390fd5b5b7f802cd873de701272ec903860b690986bd460b5bcd57e30ac1fdfdeece10528ac84848484604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015620036475780820151818401526020810190506200362a565b50505050905090810190601f168015620036755780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a150505050565b60006002600083815260200190815260200160002060040160009054906101000a900460ff169050919050565b60008082840190508381101562003737576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600080858585856040516020018085805190602001908083835b602083106200378057805182526020820191506020810190506020830392506200375b565b6001836020036101000a0380198251168184511680821785525050505050509050018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018281526020019450505050506040516020818303038152906040528051906020012090506040518060a001604052808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184815260200160011515815250600260008381526020019081526020016000206000820151816000019080519060200190620038b792919062003afa565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555090505080915050949350505050565b6000620039c383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250620039cb565b905092915050565b600083831115829062003a7c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101562003a4057808201518184015260208101905062003a23565b50505050905090810190601f16801562003a6e5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6040518060a0016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b61211c8062003baa83390190565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062003b3d57805160ff191683800117855562003b6e565b8280016001018555821562003b6e579182015b8281111562003b6d57825182559160200191906001019062003b50565b5b50905062003b7d919062003b81565b5090565b62003ba691905b8082111562003ba257600081600090555060010162003b88565b5090565b9056fe60806040523480156200001157600080fd5b506040516200211c3803806200211c833981810160405260208110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052505050808160126200011c620001106200017360201b60201c565b6200017b60201b60201c565b826004908051906020019062000134929190620003a0565b5081600590805190602001906200014d929190620003a0565b5080600660006101000a81548160ff021916908360ff160217905550505050506200044f565b600033905090565b62000196816003620001dc60201b620018f31790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b620001ee8282620002c060201b60201c565b1562000262576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000349576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180620020fa6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003e357805160ff191683800117855562000414565b8280016001018555821562000414579182015b8281111562000413578251825591602001919060010190620003f6565b5b50905062000423919062000427565b5090565b6200044c91905b80821115620004485760008160009055506001016200042e565b5090565b90565b611c9b806200045f6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a257806398650275116100715780639865027514610528578063a457c2d714610532578063a9059cbb14610598578063aa271e1a146105fe578063dd62ed3e1461065a5761010b565b806370a08231146103bb57806379cc67901461041357806395d89b4114610461578063983b2d56146104e45761010b565b8063313ce567116100de578063313ce5671461029d57806339509351146102c157806340c10f191461032757806342966c681461038d5761010b565b806306fdde0314610110578063095ea7b31461019357806318160ddd146101f957806323b872dd14610217575b600080fd5b6101186106d2565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015857808201518184015260208101905061013d565b50505050905090810190601f1680156101855780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101df600480360360408110156101a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610774565b604051808215151515815260200191505060405180910390f35b610201610792565b6040518082815260200191505060405180910390f35b6102836004803603606081101561022d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061079c565b604051808215151515815260200191505060405180910390f35b6102a5610875565b604051808260ff1660ff16815260200191505060405180910390f35b61030d600480360360408110156102d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061088c565b604051808215151515815260200191505060405180910390f35b6103736004803603604081101561033d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061093f565b604051808215151515815260200191505060405180910390f35b6103b9600480360360208110156103a357600080fd5b81019080803590602001909291905050506109ba565b005b6103fd600480360360208110156103d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109ce565b6040518082815260200191505060405180910390f35b61045f6004803603604081101561042957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a16565b005b610469610a24565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104a957808201518184015260208101905061048e565b50505050905090810190601f1680156104d65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610526600480360360208110156104fa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ac6565b005b610530610b37565b005b61057e6004803603604081101561054857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b49565b604051808215151515815260200191505060405180910390f35b6105e4600480360360408110156105ae57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c16565b604051808215151515815260200191505060405180910390f35b6106406004803603602081101561061457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c34565b604051808215151515815260200191505060405180910390f35b6106bc6004803603604081101561067057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c51565b6040518082815260200191505060405180910390f35b606060048054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561076a5780601f1061073f5761010080835404028352916020019161076a565b820191906000526020600020905b81548152906001019060200180831161074d57829003601f168201915b5050505050905090565b6000610788610781610cd8565b8484610ce0565b6001905092915050565b6000600254905090565b60006107a9848484610ed7565b61086a846107b5610cd8565b61086585604051806060016040528060288152602001611b6a60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061081b610cd8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461118d9092919063ffffffff16565b610ce0565b600190509392505050565b6000600660009054906101000a900460ff16905090565b6000610935610899610cd8565b8461093085600160006108aa610cd8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461124d90919063ffffffff16565b610ce0565b6001905092915050565b600061095161094c610cd8565b610c34565b6109a6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180611b196030913960400191505060405180910390fd5b6109b083836112d5565b6001905092915050565b6109cb6109c5610cd8565b82611490565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610a208282611648565b5050565b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610abc5780601f10610a9157610100808354040283529160200191610abc565b820191906000526020600020905b815481529060010190602001808311610a9f57829003601f168201915b5050505050905090565b610ad6610ad1610cd8565b610c34565b610b2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180611b196030913960400191505060405180910390fd5b610b3481611717565b50565b610b47610b42610cd8565b611771565b565b6000610c0c610b56610cd8565b84610c0785604051806060016040528060258152602001611c426025913960016000610b80610cd8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461118d9092919063ffffffff16565b610ce0565b6001905092915050565b6000610c2a610c23610cd8565b8484610ed7565b6001905092915050565b6000610c4a8260036117cb90919063ffffffff16565b9050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610d66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611c1e6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610dec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611ad16022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611bf96025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fe3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611a8c6023913960400191505060405180910390fd5b61104e81604051806060016040528060268152602001611af3602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461118d9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110e1816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461124d90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600083831115829061123a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156111ff5780820151818401526020810190506111e4565b50505050905090810190601f16801561122c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000808284019050838110156112cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611378576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b61138d8160025461124d90919063ffffffff16565b6002819055506113e4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461124d90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611516576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611bd86021913960400191505060405180910390fd5b61158181604051806060016040528060228152602001611aaf602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461118d9092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115d8816002546118a990919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6116528282611490565b6117138261165e610cd8565b61170e84604051806060016040528060248152602001611bb460249139600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006116c4610cd8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461118d9092919063ffffffff16565b610ce0565b5050565b61172b8160036118f390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6117858160036119ce90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611852576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611b926022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006118eb83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061118d565b905092915050565b6118fd82826117cb565b15611970576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6119d882826117cb565b611a2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611b496021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365526f6c65733a206163636f756e7420697320746865207a65726f206164647265737345524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158205a381057d9cb9473e02c23337f144bac19ba1a48d30b8e778b11e922e1d7376664736f6c63430005100032526f6c65733a206163636f756e7420697320746865207a65726f20616464726573735468652042616e6b20646f6573206e6f7420686f6c6420656e6f756768206c6f636b656420746f6b656e7320746f2066756c66696c6c207468697320726571756573742e416363657373207265737472696374656420746f2074686520636f736d6f7320627269646765496e73756666696369656e7420657468657265756d2062616c616e636520666f722064656c69766572792e546865207472616e73616374696f6e732076616c7565206d75737420626520657175616c207468652073706563696669656420616d6f756e742028696e2077656929457468657265756d206465706f736974732072657175697265207468652027746f6b656e27206164647265737320746f20626520746865206e756c6c2061646472657373417474656d70746564206d696e74206f662062726964676520746f6b656e73206661696c6564496e73756666696369656e7420455243323020746f6b656e2062616c616e636520666f722064656c69766572792e546f6b656e206d757374206265206120636f6e74726f6c6c65642062726964676520746f6b656e436f6e747261637420746f6b656e20616c6c6f77616e63657320696e73756666696369656e7420746f20636f6d706c6574652074686973206c6f636b2072657175657374a265627a7a7231582075e70f948303aa4f186e5a1cdb2ce5b6be915fac8c8e764efec42a10d4a1676564736f6c63430005100032",
  "sourceMap": "548:7613:9:-;;;835:273;8:9:-1;5:2;;;30:1;27;20:12;5:2;835:273:9;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;835:273:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1074:1:11;1055:16;:20;;;;1320:1:12;1304:13;:17;;;;985:16:9;974:8;;:27;;;;;;;;;;;;;;;;;;1027:14;1011:6;;:31;;;;;;;;;;;;;;;;;;1080:20;1052:12;;:49;;;;;;;;;;;;;;;;;;835:273;;;548:7613;;;;;;",
  "deployedSourceMap": "548:7613:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1238:8;;;;;;;;;;;1224:22;;:10;:22;;;1216:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;548:7613;1466:160:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1466:160:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1466:160:12;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1466:160:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1466:160:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1466:160:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1466:160:12;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;464:55:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;464:55:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;464:55:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;464:55:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;392:28:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;392:28:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;728:45:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;728:45:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;728:45:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7799:183;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7799:183:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7799:183:9;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7799:183:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;365:31:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;365:31:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2200:265:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2200:265:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2200:265:9;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2200:265:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2200:265:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2200:265:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2200:265:9;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;635:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;635:23:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1754:166:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1754:166:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1754:166:12;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1754:166:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1754:166:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1754:166:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1754:166:12;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;664:20:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;664:20:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7988:170;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7988:170:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7988:170:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;402:56:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;402:56:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;402:56:11;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;402:56:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;402:56:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;402:56:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;402:56:11;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4125:1665:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4125:1665:9;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4125:1665:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4125:1665:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4125:1665:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4125:1665:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;690:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;690:32:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;426:46:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;426:46:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;426:46:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2827:452:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2827:452:9;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2827:452:9;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2827:452:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2827:452:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2827:452:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2827:452:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2827:452:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2827:452:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2827:452:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2827:452:9;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3555:311;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3555:311:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3555:311:9;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3555:311:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3555:311:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3555:311:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3555:311:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6078:989;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6078:989:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6078:989:9;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6078:989:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6078:989:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6078:989:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6078:989:9;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7235:122;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7235:122:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7235:122:9;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1347:162:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:162:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1347:162:11;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1347:162:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1347:162:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1347:162:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1347:162:11;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;478:49:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;478:49:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;478:49:12;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;478:49:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;478:49:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;478:49:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;478:49:12;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1466:160;1565:7;1595:15;1611:7;1595:24;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1595:24:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1588:31;;1466:160;;;:::o;464:55:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;392:28:12:-;;;;:::o;728:45:9:-;;;;;;;;;;;;;;;;;;;;;;:::o;7799:183::-;7884:12;7898:15;7915:7;7924;7954:21;7971:3;7954:16;:21::i;:::-;7947:28;;;;;;;;7799:183;;;;;:::o;365:31:11:-;;;;:::o;2200:265:9:-;2310:7;1694:12;;;;;;;;;;;1672:35;;:10;:35;;;1651:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2333:20;2356:29;2377:7;2356:20;:29::i;:::-;2333:52;;2425:4;2395:13;:27;2409:12;2395:27;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;2446:12;2439:19;;;2200:265;;;:::o;635:23::-;;;;;;;;;;;;;:::o;1754:166:12:-;1846:7;1876:11;:37;1888:15;1904:7;1888:24;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1888:24:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:37;;;;;;;;;;;;;;;;1869:44;;1754:166;;;:::o;664:20:9:-;;;;;;;;;;;;;:::o;7988:170::-;8053:4;8072:13;:21;8086:6;8072:21;;;;;;;;;;;;;;;;;;;;;;;;;8069:61;;;8115:4;8108:11;;;;8069:61;8146:5;8139:12;;7988:170;;;;:::o;402:56:11:-;;;28:7:-1;22:14;169:4;160:7;156:18;147:7;143:32;204:13;198:20;246:8;231:13;224:31;316:4;307:7;303:18;296:4;287:7;283:18;273:49;350:9;335:13;328:32;378:4;366:16;;0:388;;;;402:56:11;;;;;;;;;;;;;:::o;4125:1665:9:-;1145:13:12;;1141:1;1125:13;;:17;:33;1117:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4267:20:9;4342:1;4330:9;:13;4326:1458;;;4402:1;4384:20;;:6;:20;;;4359:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4558:7;4545:9;:20;4520:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4679:14;;;;;;;;;;;;;;;;;;;4707:71;4730:10;4742;4754:6;4762;4770:7;4707:22;:71::i;:::-;4326:1458;;;4909:6;4897:26;;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4897:28:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4897:28:9;;;;;;39:16:-1;36:1;17:17;2:54;4897:28:9;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4897:28:9;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;4897:28:9;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4897:28:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4888:37;;4943:13;:21;4957:6;4943:21;;;;;;;;;;;;;;;;;;;;;;;;;4940:834;;;5037:7;5004:6;4992:29;;;5022:10;4992:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4992:41:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4992:41:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4992:41:9;;;;;;;;;;;;;;;;:52;;4984:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5148:6;5136:28;;;5186:10;5218:7;5136:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5136:107:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5136:107:9;;;;5261:69;5282:10;5294;5306:6;5314;5322:7;5261:20;:69::i;:::-;4940:834;;;5410:6;5398:32;;;5456:10;5500:4;5531:7;5398:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5398:162:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5398:162:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5398:162:9;;;;;;;;;;;;;;;;5369:301;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5688:71;5711:10;5723;5735:6;5743;5751:7;5688:22;:71::i;:::-;4940:834;4326:1458;1193:1:12;4125:1665:9;;;:::o;690:32::-;;;;;;;;;;;;;:::o;426:46:12:-;;;;;;;;;;;;;;;;;:::o;2827:452:9:-;1694:12;;;;;;;;;;;1672:35;;:10;:35;;;1651:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3085:187;3122:13;3153:18;3189:19;3226:7;3251;3085:19;:187::i;:::-;2827:452;;;;;:::o;3555:311::-;1145:13:12;;1141:1;1125:13;;:17;:33;1117:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3693:6:9;3681:28;;;3710:10;3722:7;3681:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3681:49:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3681:49:9;;;;3740:20;3775:6;3763:26;;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3763:28:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3763:28:9;;;;;;39:16:-1;36:1;17:17;2:54;3763:28:9;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3763:28:9;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;3763:28:9;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3763:28:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3740:51;;3801:58;3811:10;3823;3835:6;3843;3851:7;3801:9;:58::i;:::-;1193:1:12;3555:311:9;;;:::o;6078:989::-;1694:12;;;;;;;;;;;1672:35;;:10;:35;;;1651:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6357:7;6330:23;6345:7;6330:14;:23::i;:::-;:34;;6309:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6551:20;6574:15;6590:7;6574:24;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6574:24:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6551:47;;6636:1;6612:26;;:12;:26;;;6608:388;;;6704:7;6679:21;:32;;6654:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6608:388;;;6898:7;6856:12;6844:35;;;6888:4;6844:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6844:50:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6844:50:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6844:50:9;;;;;;;;;;;;;;;;:61;;6819:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6608:388;7005:55;7017:10;7029:12;7043:7;7052;7005:11;:55::i;:::-;1781:1;6078:989;;;:::o;7235:122::-;7301:4;7324:26;7346:3;7324:21;:26::i;:::-;7317:33;;7235:122;;;:::o;1347:162:11:-;1439:7;1470:22;1493:7;1470:31;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1470:31:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1462:40;;1347:162;;;:::o;478:49:12:-;;;28:7:-1;22:14;169:4;160:7;156:18;147:7;143:32;204:13;198:20;246:8;231:13;224:31;316:4;307:7;303:18;296:4;287:7;283:18;273:49;350:9;335:13;328:32;378:4;366:16;;0:388;;;;478:49:12;;;;;;;;;;;;;:::o;5044:433:11:-;5143:12;5169:15;5198:7;5219;5251:28;;:::i;:::-;5282:14;:19;5297:3;5282:19;;;;;;;;;;;5251:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5333:7;:20;;;5367:7;:25;;;5406:7;:26;;;5446:7;:14;;;5312:158;;;;;;;;;;;;5044:433;;;;;:::o;2547:544::-;2634:7;2676:23;2697:1;2676:16;;:20;;:23;;;;:::i;:::-;2657:16;:42;;;;2754:26;2801:7;2783:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2783:26:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2783:26:11;2754:55;;2861:29;2901:14;2861:55;;2960:21;2926:22;2949:7;2926:31;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2926:31:11;;;;;;;;;;;;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;2997:49;3015:21;3038:7;2997:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2997:49:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3063:21;3056:28;;;;2547:544;;;:::o;2963:510:12:-;3182:20;3200:1;3182:13;;:17;;:20;;;;:::i;:::-;3166:13;:36;;;;3311:6;3284:15;3300:7;3284:24;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3284:24:12;;;;;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;3349:32;3373:7;3349:11;:19;3361:6;3349:19;;;;;;;;;;;;;;;;:23;;:32;;;;:::i;:::-;3327:11;:19;3339:6;3327:19;;;;;;;;;;;;;;;:54;;;;3397:69;3405:7;3414:10;3426:6;3434:7;3443;3452:13;;3397:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3397:69:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3397:69:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2963:510;;;;;:::o;3772:328::-;3989:20;4007:1;3989:13;;:17;;:20;;;;:::i;:::-;3973:13;:36;;;;4024:69;4032:7;4041:10;4053:6;4061:7;4070;4079:13;;4024:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4024:69:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4024:69:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3772:328;;;;;:::o;3456:913:11:-;3739:19;3704:54;;:22;3727:7;3704:31;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3704:31:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:54;;;3683:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3897:19;3885:37;;;3940:18;3976:7;3885:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3885:112:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3885:112:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3885:112:11;;;;;;;;;;;;;;;;3864:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4072:139;4102:13;4129:18;4161:19;4194:7;4072:16;:139::i;:::-;;4227:135;4259:19;4292:7;4313;4334:18;4227:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4227:135:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3456:913;;;;;:::o;2283:317:12:-;2489:20;2507:1;2489:13;;:17;;:20;;;;:::i;:::-;2473:13;:36;;;;2524:69;2532:7;2541:10;2553:6;2561:7;2570;2579:13;;2524:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2524:69:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2524:69:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2283:317;;;;;:::o;4417:664::-;4682:32;4706:7;4682:11;:19;4694:6;4682:19;;;;;;;;;;;;;;;;:23;;:32;;;;:::i;:::-;4660:11;:19;4672:6;4660:19;;;;;;;;;;;;;;;:54;;;;4795:1;4777:20;;:6;:20;;;4773:239;;;4813:10;:19;;:28;4833:7;4813:28;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4813:28:12;4773:239;;;4909:6;4897:28;;;4926:10;4938:7;4897:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4897:49:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4897:49:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4897:49:12;;;;;;;;;;;;;;;;4872:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4773:239;5027:47;5037:10;5049:6;5057:7;5066;5027:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5027:47:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4417:664;;;;:::o;4580:125:11:-;4647:4;4671:14;:19;4686:3;4671:19;;;;;;;;;;;:26;;;;;;;;;;;;4663:35;;4580:125;;;:::o;834:176:3:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;1890:533:11:-;2069:7;2088:17;2148:13;2163:18;2183:6;2191:7;2131:68;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2131:68:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2131:68:11;;;2108:101;;;;;;2088:121;;2248:141;;;;;;;;2275:13;2248:141;;;;2302:18;2248:141;;;;;;2334:6;2248:141;;;;;;2354:7;2248:141;;;;2375:4;2248:141;;;;;2220:14;:25;2235:9;2220:25;;;;;;;;;;;:169;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2407:9;2400:16;;;1890:533;;;;;;:::o;1274:134:3:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;1732:187::-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;548:7613:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./CosmosBank.sol\";\nimport \"./EthereumBank.sol\";\nimport \"../Oracle.sol\";\nimport \"../CosmosBridge.sol\";\nimport \"../../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\n\n/**\n * @title BridgeBank\n * @dev Bank contract which coordinates asset-related functionality.\n *      CosmosBank manages the minting and burning of tokens which\n *      represent Cosmos based assets, while EthereumBank manages\n *      the locking and unlocking of Ethereum and ERC20 token assets\n *      based on Ethereum.\n **/\n\ncontract BridgeBank is CosmosBank, EthereumBank {\n    using SafeMath for uint256;\n\n    address public operator;\n    Oracle public oracle;\n    CosmosBridge public cosmosBridge;\n    mapping(address => bool) public isCosmosAsset;\n\n    /*\n     * @dev: Constructor, sets operator\n     */\n    constructor(\n        address _operatorAddress,\n        address _oracleAddress,\n        address _cosmosBridgeAddress\n    ) public {\n        operator = _operatorAddress;\n        oracle = Oracle(_oracleAddress);\n        cosmosBridge = CosmosBridge(_cosmosBridgeAddress);\n    }\n\n    /*\n     * @dev: Modifier to restrict access to operator\n     */\n    modifier onlyOperator() {\n        require(msg.sender == operator, \"Must be BridgeBank operator.\");\n        _;\n    }\n\n    /*\n     * @dev: Modifier to restrict access to the oracle\n     */\n    modifier onlyOracle() {\n        require(\n            msg.sender == address(oracle),\n            \"Access restricted to the oracle\"\n        );\n        _;\n    }\n\n    /*\n     * @dev: Modifier to restrict access to the cosmos bridge\n     */\n    modifier onlyCosmosBridge() {\n        require(\n            msg.sender == address(cosmosBridge),\n            \"Access restricted to the cosmos bridge\"\n        );\n        _;\n    }\n\n    /*\n     * @dev: Fallback function allows operator to send funds to the bank directly\n     *       This feature is used for testing and is available at the operator's own risk.\n     */\n    function() external payable onlyOperator {}\n\n    /*\n     * @dev: Creates a new BridgeToken\n     *\n     * @param _symbol: The new BridgeToken's symbol\n     * @return: The new BridgeToken contract's address\n     */\n    function createNewBridgeToken(string memory _symbol)\n        public\n        onlyCosmosBridge\n        returns (address)\n    {\n        address tokenAddress = deployNewBridgeToken(_symbol);\n        isCosmosAsset[tokenAddress] = true;\n        return tokenAddress;\n    }\n\n    /*\n     * @dev: Mints new BankTokens\n     *\n     * @param _cosmosSender: The sender's Cosmos address in bytes.\n     * @param _ethereumRecipient: The intended recipient's Ethereum address.\n     * @param _cosmosTokenAddress: The currency type\n     * @param _symbol: comsos token symbol\n     * @param _amount: number of comsos tokens to be minted\n     */\n    function mintBridgeTokens(\n        bytes memory _cosmosSender,\n        address payable _intendedRecipient,\n        address _bridgeTokenAddress,\n        string memory _symbol,\n        uint256 _amount\n    ) public onlyCosmosBridge {\n        return\n            mintNewBridgeTokens(\n                _cosmosSender,\n                _intendedRecipient,\n                _bridgeTokenAddress,\n                _symbol,\n                _amount\n            );\n    }\n\n    /*\n     * @dev: Burns BridgeTokens representing native Cosmos assets.\n     *\n     * @param _recipient: bytes representation of destination address.\n     * @param _token: token address in origin chain (0x0 if ethereum)\n     * @param _amount: value of deposit\n     */\n    function burn(bytes memory _recipient, address _token, uint256 _amount)\n        public\n        availableNonce()\n    {\n        BridgeToken(_token).burnFrom(msg.sender, _amount);\n        string memory symbol = BridgeToken(_token).symbol();\n        burnFunds(msg.sender, _recipient, _token, symbol, _amount);\n    }\n\n    /*\n     * @dev: Locks received Ethereum/ERC20 funds.\n     *\n     * @param _recipient: bytes representation of destination address.\n     * @param _token: token address in origin chain (0x0 if ethereum)\n     * @param _amount: value of deposit\n     */\n    function lock(bytes memory _recipient, address _token, uint256 _amount)\n        public\n        payable\n        availableNonce()\n    {\n        string memory symbol;\n\n        // Ethereum deposit\n        if (msg.value > 0) {\n            require(\n                _token == address(0),\n                \"Ethereum deposits require the 'token' address to be the null address\"\n            );\n            require(\n                msg.value == _amount,\n                \"The transactions value must be equal the specified amount (in wei)\"\n            );\n            symbol = \"ETH\";\n            lockEthereumAssetFunds(msg.sender, _recipient, _token, symbol, _amount);\n        // ERC20 deposit\n        } else {\n            // Set symbol to the ERC20 token's symbol\n            symbol = BridgeToken(_token).symbol();\n\n            if(isCosmosAsset[_token]) {\n                require(BridgeToken(_token).balanceOf(msg.sender) >= _amount,  \"Contract token allowances insufficient to complete this lock request\");\n                BridgeToken(_token).burnFrom(\n                    msg.sender,\n                    _amount\n                );\n                lockCosmosAssetFunds(msg.sender, _recipient, _token, symbol, _amount);\n            } else {\n                require(\n                    BridgeToken(_token).transferFrom(\n                        msg.sender,\n                        address(this),\n                        _amount\n                    ),\n                    \"Contract token allowances insufficient to complete this lock request\"\n                );\n                lockEthereumAssetFunds(msg.sender, _recipient, _token, symbol, _amount);\n            }\n        }\n    }\n\n    /*\n     * @dev: Unlocks Ethereum and ERC20 tokens held on the contract.\n     *\n     * @param _recipient: recipient's Ethereum address\n     * @param _token: token contract address\n     * @param _symbol: token symbol\n     * @param _amount: wei amount or ERC20 token count\n     */\n    function unlock(\n        address payable _recipient,\n        string memory _symbol,\n        uint256 _amount\n    ) public onlyCosmosBridge {\n        // Confirm that the bank has sufficient locked balances of this token type\n        require(\n            getLockedFunds(_symbol) >= _amount,\n            \"The Bank does not hold enough locked tokens to fulfill this request.\"\n        );\n\n        // Confirm that the bank holds sufficient balances to complete the unlock\n        address tokenAddress = lockedTokenList[_symbol];\n        if (tokenAddress == address(0)) {\n            require(\n                address(this).balance >= _amount,\n                \"Insufficient ethereum balance for delivery.\"\n            );\n        } else {\n            require(\n                BridgeToken(tokenAddress).balanceOf(address(this)) >= _amount,\n                \"Insufficient ERC20 token balance for delivery.\"\n            );\n        }\n        unlockFunds(_recipient, tokenAddress, _symbol, _amount);\n    }\n\n    /*\n     * @dev: Exposes an item's current status.\n     *\n     * @param _id: The item in question.\n     * @return: Boolean indicating the lock status.\n     */\n    function getCosmosDepositStatus(bytes32 _id) public view returns (bool) {\n        return isLockedCosmosDeposit(_id);\n    }\n\n    /*\n     * @dev: Allows access to a Cosmos deposit's information via its unique identifier.\n     *\n     * @param _id: The deposit to be viewed.\n     * @return: Original sender's Ethereum address.\n     * @return: Intended Cosmos recipient's address in bytes.\n     * @return: The lock deposit's currency, denoted by a token address.\n     * @return: The amount locked in the deposit.\n     * @return: The deposit's unique nonce.\n     */\n    function viewCosmosDeposit(bytes32 _id)\n        public\n        view\n        returns (bytes memory, address payable, address, uint256)\n    {\n        return getCosmosDeposit(_id);\n    }\n\n    function checkIsCosmosAsset(address _token) public view returns (bool) {\n        if(isCosmosAsset[_token]){\n            return true;\n        }\n        return false;\n    }\n\n}\n",
  "sourcePath": "/Users/chientm/go/src/github.com/cosmos/peggy/testnet-contracts/contracts/BridgeBank/BridgeBank.sol",
  "ast": {
    "absolutePath": "/Users/chientm/go/src/github.com/cosmos/peggy/testnet-contracts/contracts/BridgeBank/BridgeBank.sol",
    "exportedSymbols": {
      "BridgeBank": [
        1412
      ]
    },
    "id": 1413,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 997,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/Users/chientm/go/src/github.com/cosmos/peggy/testnet-contracts/contracts/BridgeBank/CosmosBank.sol",
        "file": "./CosmosBank.sol",
        "id": 998,
        "nodeType": "ImportDirective",
        "scope": 1413,
        "sourceUnit": 1676,
        "src": "25:26:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chientm/go/src/github.com/cosmos/peggy/testnet-contracts/contracts/BridgeBank/EthereumBank.sol",
        "file": "./EthereumBank.sol",
        "id": 999,
        "nodeType": "ImportDirective",
        "scope": 1413,
        "sourceUnit": 1941,
        "src": "52:28:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chientm/go/src/github.com/cosmos/peggy/testnet-contracts/contracts/Oracle.sol",
        "file": "../Oracle.sol",
        "id": 1000,
        "nodeType": "ImportDirective",
        "scope": 1413,
        "sourceUnit": 2996,
        "src": "81:23:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chientm/go/src/github.com/cosmos/peggy/testnet-contracts/contracts/CosmosBridge.sol",
        "file": "../CosmosBridge.sol",
        "id": 1001,
        "nodeType": "ImportDirective",
        "scope": 1413,
        "sourceUnit": 2562,
        "src": "105:29:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chientm/go/src/github.com/cosmos/peggy/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 1002,
        "nodeType": "ImportDirective",
        "scope": 1413,
        "sourceUnit": 402,
        "src": "135:81:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1003,
              "name": "CosmosBank",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1675,
              "src": "571:10:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CosmosBank_$1675",
                "typeString": "contract CosmosBank"
              }
            },
            "id": 1004,
            "nodeType": "InheritanceSpecifier",
            "src": "571:10:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1005,
              "name": "EthereumBank",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1940,
              "src": "583:12:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EthereumBank_$1940",
                "typeString": "contract EthereumBank"
              }
            },
            "id": 1006,
            "nodeType": "InheritanceSpecifier",
            "src": "583:12:9"
          }
        ],
        "contractDependencies": [
          1675,
          1940
        ],
        "contractKind": "contract",
        "documentation": "@title BridgeBank\n@dev Bank contract which coordinates asset-related functionality.\n     CosmosBank manages the minting and burning of tokens which\n     represent Cosmos based assets, while EthereumBank manages\n     the locking and unlocking of Ethereum and ERC20 token assets\n     based on Ethereum.*",
        "fullyImplemented": true,
        "id": 1412,
        "linearizedBaseContracts": [
          1412,
          1940,
          1675
        ],
        "name": "BridgeBank",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1009,
            "libraryName": {
              "contractScope": null,
              "id": 1007,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 401,
              "src": "608:8:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$401",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "602:27:9",
            "typeName": {
              "id": 1008,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "621:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1011,
            "name": "operator",
            "nodeType": "VariableDeclaration",
            "scope": 1412,
            "src": "635:23:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1010,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "635:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1013,
            "name": "oracle",
            "nodeType": "VariableDeclaration",
            "scope": 1412,
            "src": "664:20:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Oracle_$2995",
              "typeString": "contract Oracle"
            },
            "typeName": {
              "contractScope": null,
              "id": 1012,
              "name": "Oracle",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2995,
              "src": "664:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Oracle_$2995",
                "typeString": "contract Oracle"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1015,
            "name": "cosmosBridge",
            "nodeType": "VariableDeclaration",
            "scope": 1412,
            "src": "690:32:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CosmosBridge_$2561",
              "typeString": "contract CosmosBridge"
            },
            "typeName": {
              "contractScope": null,
              "id": 1014,
              "name": "CosmosBridge",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2561,
              "src": "690:12:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CosmosBridge_$2561",
                "typeString": "contract CosmosBridge"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1019,
            "name": "isCosmosAsset",
            "nodeType": "VariableDeclaration",
            "scope": 1412,
            "src": "728:45:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1018,
              "keyType": {
                "id": 1016,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "736:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "728:24:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1017,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "747:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1044,
              "nodeType": "Block",
              "src": "964:144:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1028,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1011,
                      "src": "974:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1029,
                      "name": "_operatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1021,
                      "src": "985:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "974:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1031,
                  "nodeType": "ExpressionStatement",
                  "src": "974:27:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1032,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1013,
                      "src": "1011:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Oracle_$2995",
                        "typeString": "contract Oracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1034,
                          "name": "_oracleAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1023,
                          "src": "1027:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1033,
                        "name": "Oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2995,
                        "src": "1020:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Oracle_$2995_$",
                          "typeString": "type(contract Oracle)"
                        }
                      },
                      "id": 1035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1020:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Oracle_$2995",
                        "typeString": "contract Oracle"
                      }
                    },
                    "src": "1011:31:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Oracle_$2995",
                      "typeString": "contract Oracle"
                    }
                  },
                  "id": 1037,
                  "nodeType": "ExpressionStatement",
                  "src": "1011:31:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1038,
                      "name": "cosmosBridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1015,
                      "src": "1052:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CosmosBridge_$2561",
                        "typeString": "contract CosmosBridge"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1040,
                          "name": "_cosmosBridgeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1025,
                          "src": "1080:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1039,
                        "name": "CosmosBridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2561,
                        "src": "1067:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CosmosBridge_$2561_$",
                          "typeString": "type(contract CosmosBridge)"
                        }
                      },
                      "id": 1041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1067:34:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CosmosBridge_$2561",
                        "typeString": "contract CosmosBridge"
                      }
                    },
                    "src": "1052:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CosmosBridge_$2561",
                      "typeString": "contract CosmosBridge"
                    }
                  },
                  "id": 1043,
                  "nodeType": "ExpressionStatement",
                  "src": "1052:49:9"
                }
              ]
            },
            "documentation": null,
            "id": 1045,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1021,
                  "name": "_operatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1045,
                  "src": "856:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1020,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "856:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1023,
                  "name": "_oracleAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1045,
                  "src": "890:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1025,
                  "name": "_cosmosBridgeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1045,
                  "src": "922:28:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1024,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "922:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "846:110:9"
            },
            "returnParameters": {
              "id": 1027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "964:0:9"
            },
            "scope": 1412,
            "src": "835:273:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1056,
              "nodeType": "Block",
              "src": "1206:91:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1048,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3568,
                            "src": "1224:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1224:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1050,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1011,
                          "src": "1238:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1224:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d7573742062652042726964676542616e6b206f70657261746f722e",
                        "id": 1052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1248:30:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e9657294e1d612bb913db0d00947510e9a6597a5e7af385fdbeff7e0b3af633c",
                          "typeString": "literal_string \"Must be BridgeBank operator.\""
                        },
                        "value": "Must be BridgeBank operator."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e9657294e1d612bb913db0d00947510e9a6597a5e7af385fdbeff7e0b3af633c",
                          "typeString": "literal_string \"Must be BridgeBank operator.\""
                        }
                      ],
                      "id": 1047,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3571,
                        3572
                      ],
                      "referencedDeclaration": 3572,
                      "src": "1216:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1216:63:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1054,
                  "nodeType": "ExpressionStatement",
                  "src": "1216:63:9"
                },
                {
                  "id": 1055,
                  "nodeType": "PlaceholderStatement",
                  "src": "1289:1:9"
                }
              ]
            },
            "documentation": null,
            "id": 1057,
            "name": "onlyOperator",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1046,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1203:2:9"
            },
            "src": "1182:115:9",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1070,
              "nodeType": "Block",
              "src": "1395:135:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1060,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3568,
                            "src": "1426:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1426:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1063,
                              "name": "oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1013,
                              "src": "1448:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Oracle_$2995",
                                "typeString": "contract Oracle"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Oracle_$2995",
                                "typeString": "contract Oracle"
                              }
                            ],
                            "id": 1062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1440:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1440:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1426:29:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416363657373207265737472696374656420746f20746865206f7261636c65",
                        "id": 1066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1469:33:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16904f8acff96215c7c39a8c736844eca8ec14cd4dbeeac7ce0d1b30cd9eb375",
                          "typeString": "literal_string \"Access restricted to the oracle\""
                        },
                        "value": "Access restricted to the oracle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16904f8acff96215c7c39a8c736844eca8ec14cd4dbeeac7ce0d1b30cd9eb375",
                          "typeString": "literal_string \"Access restricted to the oracle\""
                        }
                      ],
                      "id": 1059,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3571,
                        3572
                      ],
                      "referencedDeclaration": 3572,
                      "src": "1405:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1405:107:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1068,
                  "nodeType": "ExpressionStatement",
                  "src": "1405:107:9"
                },
                {
                  "id": 1069,
                  "nodeType": "PlaceholderStatement",
                  "src": "1522:1:9"
                }
              ]
            },
            "documentation": null,
            "id": 1071,
            "name": "onlyOracle",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1392:2:9"
            },
            "src": "1373:157:9",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1084,
              "nodeType": "Block",
              "src": "1641:148:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1074,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3568,
                            "src": "1672:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1672:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1077,
                              "name": "cosmosBridge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1015,
                              "src": "1694:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CosmosBridge_$2561",
                                "typeString": "contract CosmosBridge"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CosmosBridge_$2561",
                                "typeString": "contract CosmosBridge"
                              }
                            ],
                            "id": 1076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1686:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1686:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1672:35:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416363657373207265737472696374656420746f2074686520636f736d6f7320627269646765",
                        "id": 1080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1721:40:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b58e59f8f1e6d195fe1ceb4e504bd7a0f581c76699828c6e5d6f5b87ec11a0a",
                          "typeString": "literal_string \"Access restricted to the cosmos bridge\""
                        },
                        "value": "Access restricted to the cosmos bridge"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b58e59f8f1e6d195fe1ceb4e504bd7a0f581c76699828c6e5d6f5b87ec11a0a",
                          "typeString": "literal_string \"Access restricted to the cosmos bridge\""
                        }
                      ],
                      "id": 1073,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3571,
                        3572
                      ],
                      "referencedDeclaration": 3572,
                      "src": "1651:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1651:120:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1082,
                  "nodeType": "ExpressionStatement",
                  "src": "1651:120:9"
                },
                {
                  "id": 1083,
                  "nodeType": "PlaceholderStatement",
                  "src": "1781:1:9"
                }
              ]
            },
            "documentation": null,
            "id": 1085,
            "name": "onlyCosmosBridge",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1638:2:9"
            },
            "src": "1613:176:9",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1090,
              "nodeType": "Block",
              "src": "2024:2:9",
              "statements": []
            },
            "documentation": null,
            "id": 1091,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [
              {
                "arguments": null,
                "id": 1088,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1087,
                  "name": "onlyOperator",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1057,
                  "src": "2011:12:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2011:12:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1086,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1991:2:9"
            },
            "returnParameters": {
              "id": 1089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2024:0:9"
            },
            "scope": 1412,
            "src": "1983:43:9",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1114,
              "nodeType": "Block",
              "src": "2323:142:9",
              "statements": [
                {
                  "assignments": [
                    1101
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1101,
                      "name": "tokenAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 1114,
                      "src": "2333:20:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1100,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2333:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1105,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1103,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1093,
                        "src": "2377:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1102,
                      "name": "deployNewBridgeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1582,
                      "src": "2356:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) returns (address)"
                      }
                    },
                    "id": 1104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2356:29:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2333:52:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1106,
                        "name": "isCosmosAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1019,
                        "src": "2395:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1108,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1107,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1101,
                        "src": "2409:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2395:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2425:4:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2395:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1111,
                  "nodeType": "ExpressionStatement",
                  "src": "2395:34:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1112,
                    "name": "tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1101,
                    "src": "2446:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1099,
                  "id": 1113,
                  "nodeType": "Return",
                  "src": "2439:19:9"
                }
              ]
            },
            "documentation": null,
            "id": 1115,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1096,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1095,
                  "name": "onlyCosmosBridge",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1085,
                  "src": "2276:16:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2276:16:9"
              }
            ],
            "name": "createNewBridgeToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1093,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1115,
                  "src": "2230:21:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1092,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2230:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2229:23:9"
            },
            "returnParameters": {
              "id": 1099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1098,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1115,
                  "src": "2310:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2310:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2309:9:9"
            },
            "scope": 1412,
            "src": "2200:265:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1138,
              "nodeType": "Block",
              "src": "3056:223:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1131,
                        "name": "_cosmosSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1117,
                        "src": "3122:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1132,
                        "name": "_intendedRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1119,
                        "src": "3153:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1133,
                        "name": "_bridgeTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1121,
                        "src": "3189:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1134,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1123,
                        "src": "3226:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1135,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1125,
                        "src": "3251:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1130,
                      "name": "mintNewBridgeTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1630,
                      "src": "3085:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes memory,address payable,address,string memory,uint256)"
                      }
                    },
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3085:187:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 1129,
                  "id": 1137,
                  "nodeType": "Return",
                  "src": "3066:206:9"
                }
              ]
            },
            "documentation": null,
            "id": 1139,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1128,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1127,
                  "name": "onlyCosmosBridge",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1085,
                  "src": "3039:16:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3039:16:9"
              }
            ],
            "name": "mintBridgeTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1117,
                  "name": "_cosmosSender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1139,
                  "src": "2862:26:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1116,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2862:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1119,
                  "name": "_intendedRecipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1139,
                  "src": "2898:34:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2898:15:9",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1121,
                  "name": "_bridgeTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1139,
                  "src": "2942:27:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2942:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1123,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1139,
                  "src": "2979:21:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1122,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2979:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1125,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1139,
                  "src": "3010:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3010:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2852:179:9"
            },
            "returnParameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3056:0:9"
            },
            "scope": 1412,
            "src": "2827:452:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1176,
              "nodeType": "Block",
              "src": "3671:195:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1154,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3568,
                          "src": "3710:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3710:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1156,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1145,
                        "src": "3722:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1151,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1143,
                            "src": "3693:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1150,
                          "name": "BridgeToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1435,
                          "src": "3681:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BridgeToken_$1435_$",
                            "typeString": "type(contract BridgeToken)"
                          }
                        },
                        "id": 1152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3681:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BridgeToken_$1435",
                          "typeString": "contract BridgeToken"
                        }
                      },
                      "id": 1153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 839,
                      "src": "3681:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3681:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1158,
                  "nodeType": "ExpressionStatement",
                  "src": "3681:49:9"
                },
                {
                  "assignments": [
                    1160
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1160,
                      "name": "symbol",
                      "nodeType": "VariableDeclaration",
                      "scope": 1176,
                      "src": "3740:20:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1159,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3740:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1166,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1162,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1143,
                            "src": "3775:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1161,
                          "name": "BridgeToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1435,
                          "src": "3763:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BridgeToken_$1435_$",
                            "typeString": "type(contract BridgeToken)"
                          }
                        },
                        "id": 1163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3763:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BridgeToken_$1435",
                          "typeString": "contract BridgeToken"
                        }
                      },
                      "id": 1164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 889,
                      "src": "3763:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view external returns (string memory)"
                      }
                    },
                    "id": 1165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3763:28:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3740:51:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1168,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3568,
                          "src": "3811:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3811:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1170,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1141,
                        "src": "3823:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1171,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1143,
                        "src": "3835:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1172,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1160,
                        "src": "3843:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1173,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1145,
                        "src": "3851:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1167,
                      "name": "burnFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1807,
                      "src": "3801:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_bytes_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,bytes memory,address,string memory,uint256)"
                      }
                    },
                    "id": 1174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3801:58:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1175,
                  "nodeType": "ExpressionStatement",
                  "src": "3801:58:9"
                }
              ]
            },
            "documentation": null,
            "id": 1177,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1148,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1147,
                  "name": "availableNonce",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1743,
                  "src": "3650:14:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3650:16:9"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1141,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "3569:23:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1140,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3569:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1143,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "3594:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3594:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1145,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "3610:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3610:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3568:58:9"
            },
            "returnParameters": {
              "id": 1149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3671:0:9"
            },
            "scope": 1412,
            "src": "3555:311:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1297,
              "nodeType": "Block",
              "src": "4257:1533:9",
              "statements": [
                {
                  "assignments": [
                    1189
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1189,
                      "name": "symbol",
                      "nodeType": "VariableDeclaration",
                      "scope": 1297,
                      "src": "4267:20:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1188,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4267:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1190,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4267:20:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1191,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3568,
                        "src": "4330:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4330:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4342:1:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4330:13:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1295,
                    "nodeType": "Block",
                    "src": "4820:964:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1226,
                            "name": "symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1189,
                            "src": "4888:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1228,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1181,
                                    "src": "4909:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1227,
                                  "name": "BridgeToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1435,
                                  "src": "4897:11:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_BridgeToken_$1435_$",
                                    "typeString": "type(contract BridgeToken)"
                                  }
                                },
                                "id": 1229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4897:19:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BridgeToken_$1435",
                                  "typeString": "contract BridgeToken"
                                }
                              },
                              "id": 1230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "symbol",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 889,
                              "src": "4897:26:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 1231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4897:28:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "4888:37:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 1233,
                        "nodeType": "ExpressionStatement",
                        "src": "4888:37:9"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1234,
                            "name": "isCosmosAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1019,
                            "src": "4943:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1236,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1235,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1181,
                            "src": "4957:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4943:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1293,
                          "nodeType": "Block",
                          "src": "5351:423:9",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1274,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3568,
                                          "src": "5456:3:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1275,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "5456:10:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 1277,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3612,
                                            "src": "5500:4:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_BridgeBank_$1412",
                                              "typeString": "contract BridgeBank"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_BridgeBank_$1412",
                                              "typeString": "contract BridgeBank"
                                            }
                                          ],
                                          "id": 1276,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "5492:7:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": "address"
                                        },
                                        "id": 1278,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5492:13:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "id": 1279,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1183,
                                        "src": "5531:7:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 1271,
                                            "name": "_token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1181,
                                            "src": "5410:6:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 1270,
                                          "name": "BridgeToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1435,
                                          "src": "5398:11:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_BridgeToken_$1435_$",
                                            "typeString": "type(contract BridgeToken)"
                                          }
                                        },
                                        "id": 1272,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5398:19:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_BridgeToken_$1435",
                                          "typeString": "contract BridgeToken"
                                        }
                                      },
                                      "id": 1273,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "transferFrom",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 535,
                                      "src": "5398:32:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address,address,uint256) external returns (bool)"
                                      }
                                    },
                                    "id": 1280,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5398:162:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "436f6e747261637420746f6b656e20616c6c6f77616e63657320696e73756666696369656e7420746f20636f6d706c6574652074686973206c6f636b2072657175657374",
                                    "id": 1281,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5582:70:9",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_a71cf6e392e090031085452aaf1a9ae45c5ec45052fca840edf261171e058a8d",
                                      "typeString": "literal_string \"Contract token allowances insufficient to complete this lock request\""
                                    },
                                    "value": "Contract token allowances insufficient to complete this lock request"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_a71cf6e392e090031085452aaf1a9ae45c5ec45052fca840edf261171e058a8d",
                                      "typeString": "literal_string \"Contract token allowances insufficient to complete this lock request\""
                                    }
                                  ],
                                  "id": 1269,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    3571,
                                    3572
                                  ],
                                  "referencedDeclaration": 3572,
                                  "src": "5369:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1282,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5369:301:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1283,
                              "nodeType": "ExpressionStatement",
                              "src": "5369:301:9"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1285,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3568,
                                      "src": "5711:3:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1286,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "5711:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1287,
                                    "name": "_recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1179,
                                    "src": "5723:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1288,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1181,
                                    "src": "5735:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1289,
                                    "name": "symbol",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1189,
                                    "src": "5743:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1290,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1183,
                                    "src": "5751:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1284,
                                  "name": "lockEthereumAssetFunds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1854,
                                  "src": "5688:22:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_bytes_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                    "typeString": "function (address payable,bytes memory,address,string memory,uint256)"
                                  }
                                },
                                "id": 1291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5688:71:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1292,
                              "nodeType": "ExpressionStatement",
                              "src": "5688:71:9"
                            }
                          ]
                        },
                        "id": 1294,
                        "nodeType": "IfStatement",
                        "src": "4940:834:9",
                        "trueBody": {
                          "id": 1268,
                          "nodeType": "Block",
                          "src": "4966:379:9",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1246,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 1242,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3568,
                                            "src": "5022:3:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 1243,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "5022:10:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "id": 1239,
                                              "name": "_token",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1181,
                                              "src": "5004:6:9",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 1238,
                                            "name": "BridgeToken",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1435,
                                            "src": "4992:11:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_BridgeToken_$1435_$",
                                              "typeString": "type(contract BridgeToken)"
                                            }
                                          },
                                          "id": 1240,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4992:19:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_BridgeToken_$1435",
                                            "typeString": "contract BridgeToken"
                                          }
                                        },
                                        "id": 1241,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "balanceOf",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 445,
                                        "src": "4992:29:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 1244,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4992:41:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "id": 1245,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1183,
                                      "src": "5037:7:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4992:52:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "436f6e747261637420746f6b656e20616c6c6f77616e63657320696e73756666696369656e7420746f20636f6d706c6574652074686973206c6f636b2072657175657374",
                                    "id": 1247,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5047:70:9",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_a71cf6e392e090031085452aaf1a9ae45c5ec45052fca840edf261171e058a8d",
                                      "typeString": "literal_string \"Contract token allowances insufficient to complete this lock request\""
                                    },
                                    "value": "Contract token allowances insufficient to complete this lock request"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_a71cf6e392e090031085452aaf1a9ae45c5ec45052fca840edf261171e058a8d",
                                      "typeString": "literal_string \"Contract token allowances insufficient to complete this lock request\""
                                    }
                                  ],
                                  "id": 1237,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    3571,
                                    3572
                                  ],
                                  "referencedDeclaration": 3572,
                                  "src": "4984:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4984:134:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1249,
                              "nodeType": "ExpressionStatement",
                              "src": "4984:134:9"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1254,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3568,
                                      "src": "5186:3:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1255,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "5186:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1256,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1183,
                                    "src": "5218:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 1251,
                                        "name": "_token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1181,
                                        "src": "5148:6:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1250,
                                      "name": "BridgeToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1435,
                                      "src": "5136:11:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_BridgeToken_$1435_$",
                                        "typeString": "type(contract BridgeToken)"
                                      }
                                    },
                                    "id": 1252,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5136:19:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BridgeToken_$1435",
                                      "typeString": "contract BridgeToken"
                                    }
                                  },
                                  "id": 1253,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "burnFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 839,
                                  "src": "5136:28:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 1257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5136:107:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1258,
                              "nodeType": "ExpressionStatement",
                              "src": "5136:107:9"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1260,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3568,
                                      "src": "5282:3:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1261,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "5282:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1262,
                                    "name": "_recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1179,
                                    "src": "5294:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1263,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1181,
                                    "src": "5306:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1264,
                                    "name": "symbol",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1189,
                                    "src": "5314:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1265,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1183,
                                    "src": "5322:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1259,
                                  "name": "lockCosmosAssetFunds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1884,
                                  "src": "5261:20:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_bytes_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                    "typeString": "function (address payable,bytes memory,address,string memory,uint256)"
                                  }
                                },
                                "id": 1266,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5261:69:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1267,
                              "nodeType": "ExpressionStatement",
                              "src": "5261:69:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1296,
                  "nodeType": "IfStatement",
                  "src": "4326:1458:9",
                  "trueBody": {
                    "id": 1225,
                    "nodeType": "Block",
                    "src": "4345:469:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1196,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1181,
                                "src": "4384:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 1198,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4402:1:9",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1197,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4394:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 1199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4394:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "4384:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "457468657265756d206465706f736974732072657175697265207468652027746f6b656e27206164647265737320746f20626520746865206e756c6c2061646472657373",
                              "id": 1201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4422:70:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_654fc69a3e285a65c892379154123dbb4769eb0c8089f0ab4ad3a177d133529b",
                                "typeString": "literal_string \"Ethereum deposits require the 'token' address to be the null address\""
                              },
                              "value": "Ethereum deposits require the 'token' address to be the null address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_654fc69a3e285a65c892379154123dbb4769eb0c8089f0ab4ad3a177d133529b",
                                "typeString": "literal_string \"Ethereum deposits require the 'token' address to be the null address\""
                              }
                            ],
                            "id": 1195,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3571,
                              3572
                            ],
                            "referencedDeclaration": 3572,
                            "src": "4359:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4359:147:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1203,
                        "nodeType": "ExpressionStatement",
                        "src": "4359:147:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1205,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3568,
                                  "src": "4545:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4545:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1207,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1183,
                                "src": "4558:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4545:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "546865207472616e73616374696f6e732076616c7565206d75737420626520657175616c207468652073706563696669656420616d6f756e742028696e2077656929",
                              "id": 1209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4583:68:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5ee7eeb9e131a1ec0578ac340f06b4c9c2389c8537e52494175dc336a73dbe61",
                                "typeString": "literal_string \"The transactions value must be equal the specified amount (in wei)\""
                              },
                              "value": "The transactions value must be equal the specified amount (in wei)"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5ee7eeb9e131a1ec0578ac340f06b4c9c2389c8537e52494175dc336a73dbe61",
                                "typeString": "literal_string \"The transactions value must be equal the specified amount (in wei)\""
                              }
                            ],
                            "id": 1204,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3571,
                              3572
                            ],
                            "referencedDeclaration": 3572,
                            "src": "4520:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4520:145:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1211,
                        "nodeType": "ExpressionStatement",
                        "src": "4520:145:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1212,
                            "name": "symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1189,
                            "src": "4679:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "455448",
                            "id": 1213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4688:5:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                              "typeString": "literal_string \"ETH\""
                            },
                            "value": "ETH"
                          },
                          "src": "4679:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 1215,
                        "nodeType": "ExpressionStatement",
                        "src": "4679:14:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1217,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3568,
                                "src": "4730:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4730:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1219,
                              "name": "_recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1179,
                              "src": "4742:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1220,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1181,
                              "src": "4754:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1221,
                              "name": "symbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1189,
                              "src": "4762:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1222,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1183,
                              "src": "4770:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1216,
                            "name": "lockEthereumAssetFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1854,
                            "src": "4707:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_bytes_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (address payable,bytes memory,address,string memory,uint256)"
                            }
                          },
                          "id": 1223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4707:71:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1224,
                        "nodeType": "ExpressionStatement",
                        "src": "4707:71:9"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1298,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1186,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1185,
                  "name": "availableNonce",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1743,
                  "src": "4236:14:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4236:16:9"
              }
            ],
            "name": "lock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1179,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1298,
                  "src": "4139:23:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1178,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4139:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1181,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1298,
                  "src": "4164:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4164:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1183,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1298,
                  "src": "4180:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4180:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4138:58:9"
            },
            "returnParameters": {
              "id": 1187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4257:0:9"
            },
            "scope": 1412,
            "src": "4125:1665:9",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1363,
              "nodeType": "Block",
              "src": "6216:851:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1311,
                              "name": "_symbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1302,
                              "src": "6345:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1310,
                            "name": "getLockedFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1777,
                            "src": "6330:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (string memory) view returns (uint256)"
                            }
                          },
                          "id": 1312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6330:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1313,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1304,
                          "src": "6357:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6330:34:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652042616e6b20646f6573206e6f7420686f6c6420656e6f756768206c6f636b656420746f6b656e7320746f2066756c66696c6c207468697320726571756573742e",
                        "id": 1315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6378:70:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0078faa39fc5111d0db57ae2eae51add4ea133eb98a4a88801c163a1963749d6",
                          "typeString": "literal_string \"The Bank does not hold enough locked tokens to fulfill this request.\""
                        },
                        "value": "The Bank does not hold enough locked tokens to fulfill this request."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0078faa39fc5111d0db57ae2eae51add4ea133eb98a4a88801c163a1963749d6",
                          "typeString": "literal_string \"The Bank does not hold enough locked tokens to fulfill this request.\""
                        }
                      ],
                      "id": 1309,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3571,
                        3572
                      ],
                      "referencedDeclaration": 3572,
                      "src": "6309:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6309:149:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1317,
                  "nodeType": "ExpressionStatement",
                  "src": "6309:149:9"
                },
                {
                  "assignments": [
                    1319
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1319,
                      "name": "tokenAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 1363,
                      "src": "6551:20:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1318,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6551:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1323,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1320,
                      "name": "lockedTokenList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1692,
                      "src": "6574:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 1322,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1321,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1302,
                      "src": "6590:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6574:24:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6551:47:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1324,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1319,
                      "src": "6612:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6636:1:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6628:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 1327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6628:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6612:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1354,
                    "nodeType": "Block",
                    "src": "6805:191:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 1346,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3612,
                                        "src": "6888:4:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_BridgeBank_$1412",
                                          "typeString": "contract BridgeBank"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_BridgeBank_$1412",
                                          "typeString": "contract BridgeBank"
                                        }
                                      ],
                                      "id": 1345,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6880:7:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": "address"
                                    },
                                    "id": 1347,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6880:13:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 1342,
                                        "name": "tokenAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1319,
                                        "src": "6856:12:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1341,
                                      "name": "BridgeToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1435,
                                      "src": "6844:11:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_BridgeToken_$1435_$",
                                        "typeString": "type(contract BridgeToken)"
                                      }
                                    },
                                    "id": 1343,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6844:25:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BridgeToken_$1435",
                                      "typeString": "contract BridgeToken"
                                    }
                                  },
                                  "id": 1344,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 445,
                                  "src": "6844:35:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 1348,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6844:50:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1349,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1304,
                                "src": "6898:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6844:61:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "496e73756666696369656e7420455243323020746f6b656e2062616c616e636520666f722064656c69766572792e",
                              "id": 1351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6923:48:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70e79c566c7b289951853dd7abfb07d13634dfa8977395866d768e7f600a27f9",
                                "typeString": "literal_string \"Insufficient ERC20 token balance for delivery.\""
                              },
                              "value": "Insufficient ERC20 token balance for delivery."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_70e79c566c7b289951853dd7abfb07d13634dfa8977395866d768e7f600a27f9",
                                "typeString": "literal_string \"Insufficient ERC20 token balance for delivery.\""
                              }
                            ],
                            "id": 1340,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3571,
                              3572
                            ],
                            "referencedDeclaration": 3572,
                            "src": "6819:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6819:166:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1353,
                        "nodeType": "ExpressionStatement",
                        "src": "6819:166:9"
                      }
                    ]
                  },
                  "id": 1355,
                  "nodeType": "IfStatement",
                  "src": "6608:388:9",
                  "trueBody": {
                    "id": 1339,
                    "nodeType": "Block",
                    "src": "6640:159:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1331,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3612,
                                      "src": "6687:4:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_BridgeBank_$1412",
                                        "typeString": "contract BridgeBank"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_BridgeBank_$1412",
                                        "typeString": "contract BridgeBank"
                                      }
                                    ],
                                    "id": 1330,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6679:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 1332,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6679:13:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 1333,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "6679:21:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1334,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1304,
                                "src": "6704:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6679:32:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "496e73756666696369656e7420657468657265756d2062616c616e636520666f722064656c69766572792e",
                              "id": 1336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6729:45:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4433fd7c3102e1d9ce5ef07afd3c2a9f30b9fa9d4d5485fe3716c5fc3e8df87c",
                                "typeString": "literal_string \"Insufficient ethereum balance for delivery.\""
                              },
                              "value": "Insufficient ethereum balance for delivery."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4433fd7c3102e1d9ce5ef07afd3c2a9f30b9fa9d4d5485fe3716c5fc3e8df87c",
                                "typeString": "literal_string \"Insufficient ethereum balance for delivery.\""
                              }
                            ],
                            "id": 1329,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3571,
                              3572
                            ],
                            "referencedDeclaration": 3572,
                            "src": "6654:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6654:134:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1338,
                        "nodeType": "ExpressionStatement",
                        "src": "6654:134:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1357,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1300,
                        "src": "7017:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1358,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1319,
                        "src": "7029:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1359,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "7043:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1360,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1304,
                        "src": "7052:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1356,
                      "name": "unlockFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1939,
                      "src": "7005:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,address,string memory,uint256)"
                      }
                    },
                    "id": 1361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7005:55:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1362,
                  "nodeType": "ExpressionStatement",
                  "src": "7005:55:9"
                }
              ]
            },
            "documentation": null,
            "id": 1364,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1307,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1306,
                  "name": "onlyCosmosBridge",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1085,
                  "src": "6199:16:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6199:16:9"
              }
            ],
            "name": "unlock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1300,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1364,
                  "src": "6103:26:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6103:15:9",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1302,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1364,
                  "src": "6139:21:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1301,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6139:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1304,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1364,
                  "src": "6170:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6170:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6093:98:9"
            },
            "returnParameters": {
              "id": 1308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6216:0:9"
            },
            "scope": 1412,
            "src": "6078:989:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1375,
              "nodeType": "Block",
              "src": "7307:50:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1372,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1366,
                        "src": "7346:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1371,
                      "name": "isLockedCosmosDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1644,
                      "src": "7324:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32) view returns (bool)"
                      }
                    },
                    "id": 1373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7324:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1370,
                  "id": 1374,
                  "nodeType": "Return",
                  "src": "7317:33:9"
                }
              ]
            },
            "documentation": null,
            "id": 1376,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCosmosDepositStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1366,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1376,
                  "src": "7267:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1365,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7267:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7266:13:9"
            },
            "returnParameters": {
              "id": 1370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1369,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1376,
                  "src": "7301:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1368,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7301:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7300:6:9"
            },
            "scope": 1412,
            "src": "7235:122:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1393,
              "nodeType": "Block",
              "src": "7937:45:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1390,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1378,
                        "src": "7971:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1389,
                      "name": "getCosmosDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1674,
                      "src": "7954:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_uint256_$",
                        "typeString": "function (bytes32) view returns (bytes memory,address payable,address,uint256)"
                      }
                    },
                    "id": 1391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7954:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_uint256_$",
                      "typeString": "tuple(bytes memory,address payable,address,uint256)"
                    }
                  },
                  "functionReturnParameters": 1388,
                  "id": 1392,
                  "nodeType": "Return",
                  "src": "7947:28:9"
                }
              ]
            },
            "documentation": null,
            "id": 1394,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewCosmosDeposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1378,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1394,
                  "src": "7826:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1377,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7826:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7825:13:9"
            },
            "returnParameters": {
              "id": 1388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1381,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1394,
                  "src": "7884:12:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1380,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7884:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1383,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1394,
                  "src": "7898:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7898:15:9",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1385,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1394,
                  "src": "7915:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7915:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1387,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1394,
                  "src": "7924:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1386,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7924:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7883:49:9"
            },
            "scope": 1412,
            "src": "7799:183:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1410,
              "nodeType": "Block",
              "src": "8059:99:9",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1401,
                      "name": "isCosmosAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1019,
                      "src": "8072:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1403,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1402,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1396,
                      "src": "8086:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8072:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1407,
                  "nodeType": "IfStatement",
                  "src": "8069:61:9",
                  "trueBody": {
                    "id": 1406,
                    "nodeType": "Block",
                    "src": "8094:36:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8115:4:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1400,
                        "id": 1405,
                        "nodeType": "Return",
                        "src": "8108:11:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 1408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8146:5:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 1400,
                  "id": 1409,
                  "nodeType": "Return",
                  "src": "8139:12:9"
                }
              ]
            },
            "documentation": null,
            "id": 1411,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkIsCosmosAsset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1396,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1411,
                  "src": "8016:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8016:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8015:16:9"
            },
            "returnParameters": {
              "id": 1400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1399,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1411,
                  "src": "8053:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1398,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8053:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8052:6:9"
            },
            "scope": 1412,
            "src": "7988:170:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1413,
        "src": "548:7613:9"
      }
    ],
    "src": "0:8162:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/chientm/go/src/github.com/cosmos/peggy/testnet-contracts/contracts/BridgeBank/BridgeBank.sol",
    "exportedSymbols": {
      "BridgeBank": [
        1412
      ]
    },
    "id": 1413,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 997,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/Users/chientm/go/src/github.com/cosmos/peggy/testnet-contracts/contracts/BridgeBank/CosmosBank.sol",
        "file": "./CosmosBank.sol",
        "id": 998,
        "nodeType": "ImportDirective",
        "scope": 1413,
        "sourceUnit": 1676,
        "src": "25:26:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chientm/go/src/github.com/cosmos/peggy/testnet-contracts/contracts/BridgeBank/EthereumBank.sol",
        "file": "./EthereumBank.sol",
        "id": 999,
        "nodeType": "ImportDirective",
        "scope": 1413,
        "sourceUnit": 1941,
        "src": "52:28:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chientm/go/src/github.com/cosmos/peggy/testnet-contracts/contracts/Oracle.sol",
        "file": "../Oracle.sol",
        "id": 1000,
        "nodeType": "ImportDirective",
        "scope": 1413,
        "sourceUnit": 2996,
        "src": "81:23:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chientm/go/src/github.com/cosmos/peggy/testnet-contracts/contracts/CosmosBridge.sol",
        "file": "../CosmosBridge.sol",
        "id": 1001,
        "nodeType": "ImportDirective",
        "scope": 1413,
        "sourceUnit": 2562,
        "src": "105:29:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chientm/go/src/github.com/cosmos/peggy/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../../../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 1002,
        "nodeType": "ImportDirective",
        "scope": 1413,
        "sourceUnit": 402,
        "src": "135:81:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1003,
              "name": "CosmosBank",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1675,
              "src": "571:10:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CosmosBank_$1675",
                "typeString": "contract CosmosBank"
              }
            },
            "id": 1004,
            "nodeType": "InheritanceSpecifier",
            "src": "571:10:9"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1005,
              "name": "EthereumBank",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1940,
              "src": "583:12:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EthereumBank_$1940",
                "typeString": "contract EthereumBank"
              }
            },
            "id": 1006,
            "nodeType": "InheritanceSpecifier",
            "src": "583:12:9"
          }
        ],
        "contractDependencies": [
          1675,
          1940
        ],
        "contractKind": "contract",
        "documentation": "@title BridgeBank\n@dev Bank contract which coordinates asset-related functionality.\n     CosmosBank manages the minting and burning of tokens which\n     represent Cosmos based assets, while EthereumBank manages\n     the locking and unlocking of Ethereum and ERC20 token assets\n     based on Ethereum.*",
        "fullyImplemented": true,
        "id": 1412,
        "linearizedBaseContracts": [
          1412,
          1940,
          1675
        ],
        "name": "BridgeBank",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1009,
            "libraryName": {
              "contractScope": null,
              "id": 1007,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 401,
              "src": "608:8:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$401",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "602:27:9",
            "typeName": {
              "id": 1008,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "621:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1011,
            "name": "operator",
            "nodeType": "VariableDeclaration",
            "scope": 1412,
            "src": "635:23:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1010,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "635:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1013,
            "name": "oracle",
            "nodeType": "VariableDeclaration",
            "scope": 1412,
            "src": "664:20:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Oracle_$2995",
              "typeString": "contract Oracle"
            },
            "typeName": {
              "contractScope": null,
              "id": 1012,
              "name": "Oracle",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2995,
              "src": "664:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Oracle_$2995",
                "typeString": "contract Oracle"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1015,
            "name": "cosmosBridge",
            "nodeType": "VariableDeclaration",
            "scope": 1412,
            "src": "690:32:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CosmosBridge_$2561",
              "typeString": "contract CosmosBridge"
            },
            "typeName": {
              "contractScope": null,
              "id": 1014,
              "name": "CosmosBridge",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2561,
              "src": "690:12:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CosmosBridge_$2561",
                "typeString": "contract CosmosBridge"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1019,
            "name": "isCosmosAsset",
            "nodeType": "VariableDeclaration",
            "scope": 1412,
            "src": "728:45:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1018,
              "keyType": {
                "id": 1016,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "736:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "728:24:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1017,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "747:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1044,
              "nodeType": "Block",
              "src": "964:144:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1028,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1011,
                      "src": "974:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1029,
                      "name": "_operatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1021,
                      "src": "985:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "974:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1031,
                  "nodeType": "ExpressionStatement",
                  "src": "974:27:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1032,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1013,
                      "src": "1011:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Oracle_$2995",
                        "typeString": "contract Oracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1034,
                          "name": "_oracleAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1023,
                          "src": "1027:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1033,
                        "name": "Oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2995,
                        "src": "1020:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Oracle_$2995_$",
                          "typeString": "type(contract Oracle)"
                        }
                      },
                      "id": 1035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1020:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Oracle_$2995",
                        "typeString": "contract Oracle"
                      }
                    },
                    "src": "1011:31:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Oracle_$2995",
                      "typeString": "contract Oracle"
                    }
                  },
                  "id": 1037,
                  "nodeType": "ExpressionStatement",
                  "src": "1011:31:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1038,
                      "name": "cosmosBridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1015,
                      "src": "1052:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CosmosBridge_$2561",
                        "typeString": "contract CosmosBridge"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1040,
                          "name": "_cosmosBridgeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1025,
                          "src": "1080:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1039,
                        "name": "CosmosBridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2561,
                        "src": "1067:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CosmosBridge_$2561_$",
                          "typeString": "type(contract CosmosBridge)"
                        }
                      },
                      "id": 1041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1067:34:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CosmosBridge_$2561",
                        "typeString": "contract CosmosBridge"
                      }
                    },
                    "src": "1052:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CosmosBridge_$2561",
                      "typeString": "contract CosmosBridge"
                    }
                  },
                  "id": 1043,
                  "nodeType": "ExpressionStatement",
                  "src": "1052:49:9"
                }
              ]
            },
            "documentation": null,
            "id": 1045,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1021,
                  "name": "_operatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1045,
                  "src": "856:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1020,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "856:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1023,
                  "name": "_oracleAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1045,
                  "src": "890:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1025,
                  "name": "_cosmosBridgeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1045,
                  "src": "922:28:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1024,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "922:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "846:110:9"
            },
            "returnParameters": {
              "id": 1027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "964:0:9"
            },
            "scope": 1412,
            "src": "835:273:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1056,
              "nodeType": "Block",
              "src": "1206:91:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1048,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3568,
                            "src": "1224:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1224:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1050,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1011,
                          "src": "1238:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1224:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d7573742062652042726964676542616e6b206f70657261746f722e",
                        "id": 1052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1248:30:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e9657294e1d612bb913db0d00947510e9a6597a5e7af385fdbeff7e0b3af633c",
                          "typeString": "literal_string \"Must be BridgeBank operator.\""
                        },
                        "value": "Must be BridgeBank operator."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e9657294e1d612bb913db0d00947510e9a6597a5e7af385fdbeff7e0b3af633c",
                          "typeString": "literal_string \"Must be BridgeBank operator.\""
                        }
                      ],
                      "id": 1047,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3571,
                        3572
                      ],
                      "referencedDeclaration": 3572,
                      "src": "1216:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1216:63:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1054,
                  "nodeType": "ExpressionStatement",
                  "src": "1216:63:9"
                },
                {
                  "id": 1055,
                  "nodeType": "PlaceholderStatement",
                  "src": "1289:1:9"
                }
              ]
            },
            "documentation": null,
            "id": 1057,
            "name": "onlyOperator",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1046,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1203:2:9"
            },
            "src": "1182:115:9",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1070,
              "nodeType": "Block",
              "src": "1395:135:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1060,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3568,
                            "src": "1426:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1426:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1063,
                              "name": "oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1013,
                              "src": "1448:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Oracle_$2995",
                                "typeString": "contract Oracle"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Oracle_$2995",
                                "typeString": "contract Oracle"
                              }
                            ],
                            "id": 1062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1440:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1440:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1426:29:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416363657373207265737472696374656420746f20746865206f7261636c65",
                        "id": 1066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1469:33:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16904f8acff96215c7c39a8c736844eca8ec14cd4dbeeac7ce0d1b30cd9eb375",
                          "typeString": "literal_string \"Access restricted to the oracle\""
                        },
                        "value": "Access restricted to the oracle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_16904f8acff96215c7c39a8c736844eca8ec14cd4dbeeac7ce0d1b30cd9eb375",
                          "typeString": "literal_string \"Access restricted to the oracle\""
                        }
                      ],
                      "id": 1059,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3571,
                        3572
                      ],
                      "referencedDeclaration": 3572,
                      "src": "1405:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1405:107:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1068,
                  "nodeType": "ExpressionStatement",
                  "src": "1405:107:9"
                },
                {
                  "id": 1069,
                  "nodeType": "PlaceholderStatement",
                  "src": "1522:1:9"
                }
              ]
            },
            "documentation": null,
            "id": 1071,
            "name": "onlyOracle",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1392:2:9"
            },
            "src": "1373:157:9",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1084,
              "nodeType": "Block",
              "src": "1641:148:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1074,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3568,
                            "src": "1672:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1672:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1077,
                              "name": "cosmosBridge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1015,
                              "src": "1694:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CosmosBridge_$2561",
                                "typeString": "contract CosmosBridge"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CosmosBridge_$2561",
                                "typeString": "contract CosmosBridge"
                              }
                            ],
                            "id": 1076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1686:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1686:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1672:35:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416363657373207265737472696374656420746f2074686520636f736d6f7320627269646765",
                        "id": 1080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1721:40:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1b58e59f8f1e6d195fe1ceb4e504bd7a0f581c76699828c6e5d6f5b87ec11a0a",
                          "typeString": "literal_string \"Access restricted to the cosmos bridge\""
                        },
                        "value": "Access restricted to the cosmos bridge"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1b58e59f8f1e6d195fe1ceb4e504bd7a0f581c76699828c6e5d6f5b87ec11a0a",
                          "typeString": "literal_string \"Access restricted to the cosmos bridge\""
                        }
                      ],
                      "id": 1073,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3571,
                        3572
                      ],
                      "referencedDeclaration": 3572,
                      "src": "1651:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1651:120:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1082,
                  "nodeType": "ExpressionStatement",
                  "src": "1651:120:9"
                },
                {
                  "id": 1083,
                  "nodeType": "PlaceholderStatement",
                  "src": "1781:1:9"
                }
              ]
            },
            "documentation": null,
            "id": 1085,
            "name": "onlyCosmosBridge",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1638:2:9"
            },
            "src": "1613:176:9",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1090,
              "nodeType": "Block",
              "src": "2024:2:9",
              "statements": []
            },
            "documentation": null,
            "id": 1091,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [
              {
                "arguments": null,
                "id": 1088,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1087,
                  "name": "onlyOperator",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1057,
                  "src": "2011:12:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2011:12:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1086,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1991:2:9"
            },
            "returnParameters": {
              "id": 1089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2024:0:9"
            },
            "scope": 1412,
            "src": "1983:43:9",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1114,
              "nodeType": "Block",
              "src": "2323:142:9",
              "statements": [
                {
                  "assignments": [
                    1101
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1101,
                      "name": "tokenAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 1114,
                      "src": "2333:20:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1100,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2333:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1105,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1103,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1093,
                        "src": "2377:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1102,
                      "name": "deployNewBridgeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1582,
                      "src": "2356:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) returns (address)"
                      }
                    },
                    "id": 1104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2356:29:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2333:52:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1106,
                        "name": "isCosmosAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1019,
                        "src": "2395:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1108,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1107,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1101,
                        "src": "2409:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2395:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2425:4:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2395:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1111,
                  "nodeType": "ExpressionStatement",
                  "src": "2395:34:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1112,
                    "name": "tokenAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1101,
                    "src": "2446:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1099,
                  "id": 1113,
                  "nodeType": "Return",
                  "src": "2439:19:9"
                }
              ]
            },
            "documentation": null,
            "id": 1115,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1096,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1095,
                  "name": "onlyCosmosBridge",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1085,
                  "src": "2276:16:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2276:16:9"
              }
            ],
            "name": "createNewBridgeToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1093,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1115,
                  "src": "2230:21:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1092,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2230:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2229:23:9"
            },
            "returnParameters": {
              "id": 1099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1098,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1115,
                  "src": "2310:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2310:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2309:9:9"
            },
            "scope": 1412,
            "src": "2200:265:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1138,
              "nodeType": "Block",
              "src": "3056:223:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1131,
                        "name": "_cosmosSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1117,
                        "src": "3122:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1132,
                        "name": "_intendedRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1119,
                        "src": "3153:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1133,
                        "name": "_bridgeTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1121,
                        "src": "3189:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1134,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1123,
                        "src": "3226:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1135,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1125,
                        "src": "3251:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1130,
                      "name": "mintNewBridgeTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1630,
                      "src": "3085:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes memory,address payable,address,string memory,uint256)"
                      }
                    },
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3085:187:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 1129,
                  "id": 1137,
                  "nodeType": "Return",
                  "src": "3066:206:9"
                }
              ]
            },
            "documentation": null,
            "id": 1139,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1128,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1127,
                  "name": "onlyCosmosBridge",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1085,
                  "src": "3039:16:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3039:16:9"
              }
            ],
            "name": "mintBridgeTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1117,
                  "name": "_cosmosSender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1139,
                  "src": "2862:26:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1116,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2862:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1119,
                  "name": "_intendedRecipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1139,
                  "src": "2898:34:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2898:15:9",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1121,
                  "name": "_bridgeTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1139,
                  "src": "2942:27:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2942:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1123,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1139,
                  "src": "2979:21:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1122,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2979:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1125,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1139,
                  "src": "3010:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3010:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2852:179:9"
            },
            "returnParameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3056:0:9"
            },
            "scope": 1412,
            "src": "2827:452:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1176,
              "nodeType": "Block",
              "src": "3671:195:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1154,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3568,
                          "src": "3710:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3710:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1156,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1145,
                        "src": "3722:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1151,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1143,
                            "src": "3693:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1150,
                          "name": "BridgeToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1435,
                          "src": "3681:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BridgeToken_$1435_$",
                            "typeString": "type(contract BridgeToken)"
                          }
                        },
                        "id": 1152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3681:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BridgeToken_$1435",
                          "typeString": "contract BridgeToken"
                        }
                      },
                      "id": 1153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burnFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 839,
                      "src": "3681:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3681:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1158,
                  "nodeType": "ExpressionStatement",
                  "src": "3681:49:9"
                },
                {
                  "assignments": [
                    1160
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1160,
                      "name": "symbol",
                      "nodeType": "VariableDeclaration",
                      "scope": 1176,
                      "src": "3740:20:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1159,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3740:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1166,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1162,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1143,
                            "src": "3775:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1161,
                          "name": "BridgeToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1435,
                          "src": "3763:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_BridgeToken_$1435_$",
                            "typeString": "type(contract BridgeToken)"
                          }
                        },
                        "id": 1163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3763:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BridgeToken_$1435",
                          "typeString": "contract BridgeToken"
                        }
                      },
                      "id": 1164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 889,
                      "src": "3763:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view external returns (string memory)"
                      }
                    },
                    "id": 1165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3763:28:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3740:51:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1168,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3568,
                          "src": "3811:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3811:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1170,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1141,
                        "src": "3823:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1171,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1143,
                        "src": "3835:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1172,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1160,
                        "src": "3843:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1173,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1145,
                        "src": "3851:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1167,
                      "name": "burnFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1807,
                      "src": "3801:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_bytes_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,bytes memory,address,string memory,uint256)"
                      }
                    },
                    "id": 1174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3801:58:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1175,
                  "nodeType": "ExpressionStatement",
                  "src": "3801:58:9"
                }
              ]
            },
            "documentation": null,
            "id": 1177,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1148,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1147,
                  "name": "availableNonce",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1743,
                  "src": "3650:14:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3650:16:9"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1141,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "3569:23:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1140,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3569:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1143,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "3594:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3594:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1145,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1177,
                  "src": "3610:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3610:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3568:58:9"
            },
            "returnParameters": {
              "id": 1149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3671:0:9"
            },
            "scope": 1412,
            "src": "3555:311:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1297,
              "nodeType": "Block",
              "src": "4257:1533:9",
              "statements": [
                {
                  "assignments": [
                    1189
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1189,
                      "name": "symbol",
                      "nodeType": "VariableDeclaration",
                      "scope": 1297,
                      "src": "4267:20:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1188,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4267:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1190,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4267:20:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1191,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3568,
                        "src": "4330:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4330:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4342:1:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4330:13:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1295,
                    "nodeType": "Block",
                    "src": "4820:964:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1226,
                            "name": "symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1189,
                            "src": "4888:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1228,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1181,
                                    "src": "4909:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1227,
                                  "name": "BridgeToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1435,
                                  "src": "4897:11:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_BridgeToken_$1435_$",
                                    "typeString": "type(contract BridgeToken)"
                                  }
                                },
                                "id": 1229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4897:19:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BridgeToken_$1435",
                                  "typeString": "contract BridgeToken"
                                }
                              },
                              "id": 1230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "symbol",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 889,
                              "src": "4897:26:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 1231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4897:28:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "4888:37:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 1233,
                        "nodeType": "ExpressionStatement",
                        "src": "4888:37:9"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1234,
                            "name": "isCosmosAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1019,
                            "src": "4943:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1236,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1235,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1181,
                            "src": "4957:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4943:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1293,
                          "nodeType": "Block",
                          "src": "5351:423:9",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1274,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3568,
                                          "src": "5456:3:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1275,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "5456:10:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 1277,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3612,
                                            "src": "5500:4:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_BridgeBank_$1412",
                                              "typeString": "contract BridgeBank"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_BridgeBank_$1412",
                                              "typeString": "contract BridgeBank"
                                            }
                                          ],
                                          "id": 1276,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "5492:7:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": "address"
                                        },
                                        "id": 1278,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5492:13:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "id": 1279,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1183,
                                        "src": "5531:7:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 1271,
                                            "name": "_token",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1181,
                                            "src": "5410:6:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 1270,
                                          "name": "BridgeToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1435,
                                          "src": "5398:11:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_BridgeToken_$1435_$",
                                            "typeString": "type(contract BridgeToken)"
                                          }
                                        },
                                        "id": 1272,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5398:19:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_BridgeToken_$1435",
                                          "typeString": "contract BridgeToken"
                                        }
                                      },
                                      "id": 1273,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "transferFrom",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 535,
                                      "src": "5398:32:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address,address,uint256) external returns (bool)"
                                      }
                                    },
                                    "id": 1280,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5398:162:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "436f6e747261637420746f6b656e20616c6c6f77616e63657320696e73756666696369656e7420746f20636f6d706c6574652074686973206c6f636b2072657175657374",
                                    "id": 1281,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5582:70:9",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_a71cf6e392e090031085452aaf1a9ae45c5ec45052fca840edf261171e058a8d",
                                      "typeString": "literal_string \"Contract token allowances insufficient to complete this lock request\""
                                    },
                                    "value": "Contract token allowances insufficient to complete this lock request"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_a71cf6e392e090031085452aaf1a9ae45c5ec45052fca840edf261171e058a8d",
                                      "typeString": "literal_string \"Contract token allowances insufficient to complete this lock request\""
                                    }
                                  ],
                                  "id": 1269,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    3571,
                                    3572
                                  ],
                                  "referencedDeclaration": 3572,
                                  "src": "5369:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1282,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5369:301:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1283,
                              "nodeType": "ExpressionStatement",
                              "src": "5369:301:9"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1285,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3568,
                                      "src": "5711:3:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1286,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "5711:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1287,
                                    "name": "_recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1179,
                                    "src": "5723:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1288,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1181,
                                    "src": "5735:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1289,
                                    "name": "symbol",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1189,
                                    "src": "5743:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1290,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1183,
                                    "src": "5751:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1284,
                                  "name": "lockEthereumAssetFunds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1854,
                                  "src": "5688:22:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_bytes_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                    "typeString": "function (address payable,bytes memory,address,string memory,uint256)"
                                  }
                                },
                                "id": 1291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5688:71:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1292,
                              "nodeType": "ExpressionStatement",
                              "src": "5688:71:9"
                            }
                          ]
                        },
                        "id": 1294,
                        "nodeType": "IfStatement",
                        "src": "4940:834:9",
                        "trueBody": {
                          "id": 1268,
                          "nodeType": "Block",
                          "src": "4966:379:9",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1246,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 1242,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3568,
                                            "src": "5022:3:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 1243,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "5022:10:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "id": 1239,
                                              "name": "_token",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1181,
                                              "src": "5004:6:9",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 1238,
                                            "name": "BridgeToken",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1435,
                                            "src": "4992:11:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_BridgeToken_$1435_$",
                                              "typeString": "type(contract BridgeToken)"
                                            }
                                          },
                                          "id": 1240,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4992:19:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_BridgeToken_$1435",
                                            "typeString": "contract BridgeToken"
                                          }
                                        },
                                        "id": 1241,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "balanceOf",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 445,
                                        "src": "4992:29:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 1244,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4992:41:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "id": 1245,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1183,
                                      "src": "5037:7:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4992:52:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "436f6e747261637420746f6b656e20616c6c6f77616e63657320696e73756666696369656e7420746f20636f6d706c6574652074686973206c6f636b2072657175657374",
                                    "id": 1247,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5047:70:9",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_a71cf6e392e090031085452aaf1a9ae45c5ec45052fca840edf261171e058a8d",
                                      "typeString": "literal_string \"Contract token allowances insufficient to complete this lock request\""
                                    },
                                    "value": "Contract token allowances insufficient to complete this lock request"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_a71cf6e392e090031085452aaf1a9ae45c5ec45052fca840edf261171e058a8d",
                                      "typeString": "literal_string \"Contract token allowances insufficient to complete this lock request\""
                                    }
                                  ],
                                  "id": 1237,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    3571,
                                    3572
                                  ],
                                  "referencedDeclaration": 3572,
                                  "src": "4984:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4984:134:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1249,
                              "nodeType": "ExpressionStatement",
                              "src": "4984:134:9"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1254,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3568,
                                      "src": "5186:3:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1255,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "5186:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1256,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1183,
                                    "src": "5218:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 1251,
                                        "name": "_token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1181,
                                        "src": "5148:6:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1250,
                                      "name": "BridgeToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1435,
                                      "src": "5136:11:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_BridgeToken_$1435_$",
                                        "typeString": "type(contract BridgeToken)"
                                      }
                                    },
                                    "id": 1252,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5136:19:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BridgeToken_$1435",
                                      "typeString": "contract BridgeToken"
                                    }
                                  },
                                  "id": 1253,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "burnFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 839,
                                  "src": "5136:28:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 1257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5136:107:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1258,
                              "nodeType": "ExpressionStatement",
                              "src": "5136:107:9"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1260,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3568,
                                      "src": "5282:3:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1261,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "5282:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1262,
                                    "name": "_recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1179,
                                    "src": "5294:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1263,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1181,
                                    "src": "5306:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1264,
                                    "name": "symbol",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1189,
                                    "src": "5314:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1265,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1183,
                                    "src": "5322:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1259,
                                  "name": "lockCosmosAssetFunds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1884,
                                  "src": "5261:20:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_bytes_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                    "typeString": "function (address payable,bytes memory,address,string memory,uint256)"
                                  }
                                },
                                "id": 1266,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5261:69:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1267,
                              "nodeType": "ExpressionStatement",
                              "src": "5261:69:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1296,
                  "nodeType": "IfStatement",
                  "src": "4326:1458:9",
                  "trueBody": {
                    "id": 1225,
                    "nodeType": "Block",
                    "src": "4345:469:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1196,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1181,
                                "src": "4384:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 1198,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4402:1:9",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1197,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4394:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 1199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4394:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "4384:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "457468657265756d206465706f736974732072657175697265207468652027746f6b656e27206164647265737320746f20626520746865206e756c6c2061646472657373",
                              "id": 1201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4422:70:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_654fc69a3e285a65c892379154123dbb4769eb0c8089f0ab4ad3a177d133529b",
                                "typeString": "literal_string \"Ethereum deposits require the 'token' address to be the null address\""
                              },
                              "value": "Ethereum deposits require the 'token' address to be the null address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_654fc69a3e285a65c892379154123dbb4769eb0c8089f0ab4ad3a177d133529b",
                                "typeString": "literal_string \"Ethereum deposits require the 'token' address to be the null address\""
                              }
                            ],
                            "id": 1195,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3571,
                              3572
                            ],
                            "referencedDeclaration": 3572,
                            "src": "4359:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4359:147:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1203,
                        "nodeType": "ExpressionStatement",
                        "src": "4359:147:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1205,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3568,
                                  "src": "4545:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4545:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1207,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1183,
                                "src": "4558:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4545:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "546865207472616e73616374696f6e732076616c7565206d75737420626520657175616c207468652073706563696669656420616d6f756e742028696e2077656929",
                              "id": 1209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4583:68:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5ee7eeb9e131a1ec0578ac340f06b4c9c2389c8537e52494175dc336a73dbe61",
                                "typeString": "literal_string \"The transactions value must be equal the specified amount (in wei)\""
                              },
                              "value": "The transactions value must be equal the specified amount (in wei)"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5ee7eeb9e131a1ec0578ac340f06b4c9c2389c8537e52494175dc336a73dbe61",
                                "typeString": "literal_string \"The transactions value must be equal the specified amount (in wei)\""
                              }
                            ],
                            "id": 1204,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3571,
                              3572
                            ],
                            "referencedDeclaration": 3572,
                            "src": "4520:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4520:145:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1211,
                        "nodeType": "ExpressionStatement",
                        "src": "4520:145:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1212,
                            "name": "symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1189,
                            "src": "4679:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "455448",
                            "id": 1213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4688:5:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                              "typeString": "literal_string \"ETH\""
                            },
                            "value": "ETH"
                          },
                          "src": "4679:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 1215,
                        "nodeType": "ExpressionStatement",
                        "src": "4679:14:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1217,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3568,
                                "src": "4730:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4730:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1219,
                              "name": "_recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1179,
                              "src": "4742:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1220,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1181,
                              "src": "4754:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1221,
                              "name": "symbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1189,
                              "src": "4762:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1222,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1183,
                              "src": "4770:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1216,
                            "name": "lockEthereumAssetFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1854,
                            "src": "4707:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_bytes_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (address payable,bytes memory,address,string memory,uint256)"
                            }
                          },
                          "id": 1223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4707:71:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1224,
                        "nodeType": "ExpressionStatement",
                        "src": "4707:71:9"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1298,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1186,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1185,
                  "name": "availableNonce",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1743,
                  "src": "4236:14:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4236:16:9"
              }
            ],
            "name": "lock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1179,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1298,
                  "src": "4139:23:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1178,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4139:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1181,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1298,
                  "src": "4164:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4164:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1183,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1298,
                  "src": "4180:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4180:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4138:58:9"
            },
            "returnParameters": {
              "id": 1187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4257:0:9"
            },
            "scope": 1412,
            "src": "4125:1665:9",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1363,
              "nodeType": "Block",
              "src": "6216:851:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1311,
                              "name": "_symbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1302,
                              "src": "6345:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1310,
                            "name": "getLockedFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1777,
                            "src": "6330:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (string memory) view returns (uint256)"
                            }
                          },
                          "id": 1312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6330:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1313,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1304,
                          "src": "6357:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6330:34:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652042616e6b20646f6573206e6f7420686f6c6420656e6f756768206c6f636b656420746f6b656e7320746f2066756c66696c6c207468697320726571756573742e",
                        "id": 1315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6378:70:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0078faa39fc5111d0db57ae2eae51add4ea133eb98a4a88801c163a1963749d6",
                          "typeString": "literal_string \"The Bank does not hold enough locked tokens to fulfill this request.\""
                        },
                        "value": "The Bank does not hold enough locked tokens to fulfill this request."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0078faa39fc5111d0db57ae2eae51add4ea133eb98a4a88801c163a1963749d6",
                          "typeString": "literal_string \"The Bank does not hold enough locked tokens to fulfill this request.\""
                        }
                      ],
                      "id": 1309,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3571,
                        3572
                      ],
                      "referencedDeclaration": 3572,
                      "src": "6309:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6309:149:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1317,
                  "nodeType": "ExpressionStatement",
                  "src": "6309:149:9"
                },
                {
                  "assignments": [
                    1319
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1319,
                      "name": "tokenAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 1363,
                      "src": "6551:20:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1318,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6551:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1323,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1320,
                      "name": "lockedTokenList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1692,
                      "src": "6574:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_address_$",
                        "typeString": "mapping(string memory => address)"
                      }
                    },
                    "id": 1322,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1321,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1302,
                      "src": "6590:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6574:24:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6551:47:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1324,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1319,
                      "src": "6612:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6636:1:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6628:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 1327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6628:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "6612:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1354,
                    "nodeType": "Block",
                    "src": "6805:191:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 1346,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3612,
                                        "src": "6888:4:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_BridgeBank_$1412",
                                          "typeString": "contract BridgeBank"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_BridgeBank_$1412",
                                          "typeString": "contract BridgeBank"
                                        }
                                      ],
                                      "id": 1345,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6880:7:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": "address"
                                    },
                                    "id": 1347,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6880:13:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 1342,
                                        "name": "tokenAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1319,
                                        "src": "6856:12:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1341,
                                      "name": "BridgeToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1435,
                                      "src": "6844:11:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_BridgeToken_$1435_$",
                                        "typeString": "type(contract BridgeToken)"
                                      }
                                    },
                                    "id": 1343,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6844:25:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BridgeToken_$1435",
                                      "typeString": "contract BridgeToken"
                                    }
                                  },
                                  "id": 1344,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 445,
                                  "src": "6844:35:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 1348,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6844:50:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1349,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1304,
                                "src": "6898:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6844:61:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "496e73756666696369656e7420455243323020746f6b656e2062616c616e636520666f722064656c69766572792e",
                              "id": 1351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6923:48:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70e79c566c7b289951853dd7abfb07d13634dfa8977395866d768e7f600a27f9",
                                "typeString": "literal_string \"Insufficient ERC20 token balance for delivery.\""
                              },
                              "value": "Insufficient ERC20 token balance for delivery."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_70e79c566c7b289951853dd7abfb07d13634dfa8977395866d768e7f600a27f9",
                                "typeString": "literal_string \"Insufficient ERC20 token balance for delivery.\""
                              }
                            ],
                            "id": 1340,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3571,
                              3572
                            ],
                            "referencedDeclaration": 3572,
                            "src": "6819:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6819:166:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1353,
                        "nodeType": "ExpressionStatement",
                        "src": "6819:166:9"
                      }
                    ]
                  },
                  "id": 1355,
                  "nodeType": "IfStatement",
                  "src": "6608:388:9",
                  "trueBody": {
                    "id": 1339,
                    "nodeType": "Block",
                    "src": "6640:159:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1331,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3612,
                                      "src": "6687:4:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_BridgeBank_$1412",
                                        "typeString": "contract BridgeBank"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_BridgeBank_$1412",
                                        "typeString": "contract BridgeBank"
                                      }
                                    ],
                                    "id": 1330,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6679:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 1332,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6679:13:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 1333,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "6679:21:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1334,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1304,
                                "src": "6704:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6679:32:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "496e73756666696369656e7420657468657265756d2062616c616e636520666f722064656c69766572792e",
                              "id": 1336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6729:45:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4433fd7c3102e1d9ce5ef07afd3c2a9f30b9fa9d4d5485fe3716c5fc3e8df87c",
                                "typeString": "literal_string \"Insufficient ethereum balance for delivery.\""
                              },
                              "value": "Insufficient ethereum balance for delivery."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4433fd7c3102e1d9ce5ef07afd3c2a9f30b9fa9d4d5485fe3716c5fc3e8df87c",
                                "typeString": "literal_string \"Insufficient ethereum balance for delivery.\""
                              }
                            ],
                            "id": 1329,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3571,
                              3572
                            ],
                            "referencedDeclaration": 3572,
                            "src": "6654:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6654:134:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1338,
                        "nodeType": "ExpressionStatement",
                        "src": "6654:134:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1357,
                        "name": "_recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1300,
                        "src": "7017:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1358,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1319,
                        "src": "7029:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1359,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "7043:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1360,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1304,
                        "src": "7052:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1356,
                      "name": "unlockFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1939,
                      "src": "7005:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,address,string memory,uint256)"
                      }
                    },
                    "id": 1361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7005:55:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1362,
                  "nodeType": "ExpressionStatement",
                  "src": "7005:55:9"
                }
              ]
            },
            "documentation": null,
            "id": 1364,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1307,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1306,
                  "name": "onlyCosmosBridge",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1085,
                  "src": "6199:16:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6199:16:9"
              }
            ],
            "name": "unlock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1300,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1364,
                  "src": "6103:26:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6103:15:9",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1302,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1364,
                  "src": "6139:21:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1301,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6139:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1304,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1364,
                  "src": "6170:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6170:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6093:98:9"
            },
            "returnParameters": {
              "id": 1308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6216:0:9"
            },
            "scope": 1412,
            "src": "6078:989:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1375,
              "nodeType": "Block",
              "src": "7307:50:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1372,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1366,
                        "src": "7346:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1371,
                      "name": "isLockedCosmosDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1644,
                      "src": "7324:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
                        "typeString": "function (bytes32) view returns (bool)"
                      }
                    },
                    "id": 1373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7324:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1370,
                  "id": 1374,
                  "nodeType": "Return",
                  "src": "7317:33:9"
                }
              ]
            },
            "documentation": null,
            "id": 1376,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCosmosDepositStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1366,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1376,
                  "src": "7267:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1365,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7267:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7266:13:9"
            },
            "returnParameters": {
              "id": 1370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1369,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1376,
                  "src": "7301:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1368,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7301:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7300:6:9"
            },
            "scope": 1412,
            "src": "7235:122:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1393,
              "nodeType": "Block",
              "src": "7937:45:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1390,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1378,
                        "src": "7971:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1389,
                      "name": "getCosmosDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1674,
                      "src": "7954:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_uint256_$",
                        "typeString": "function (bytes32) view returns (bytes memory,address payable,address,uint256)"
                      }
                    },
                    "id": 1391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7954:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_address_payable_$_t_address_$_t_uint256_$",
                      "typeString": "tuple(bytes memory,address payable,address,uint256)"
                    }
                  },
                  "functionReturnParameters": 1388,
                  "id": 1392,
                  "nodeType": "Return",
                  "src": "7947:28:9"
                }
              ]
            },
            "documentation": null,
            "id": 1394,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewCosmosDeposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1378,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 1394,
                  "src": "7826:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1377,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7826:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7825:13:9"
            },
            "returnParameters": {
              "id": 1388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1381,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1394,
                  "src": "7884:12:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1380,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7884:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1383,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1394,
                  "src": "7898:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7898:15:9",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1385,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1394,
                  "src": "7915:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7915:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1387,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1394,
                  "src": "7924:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1386,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7924:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7883:49:9"
            },
            "scope": 1412,
            "src": "7799:183:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1410,
              "nodeType": "Block",
              "src": "8059:99:9",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1401,
                      "name": "isCosmosAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1019,
                      "src": "8072:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1403,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1402,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1396,
                      "src": "8086:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8072:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1407,
                  "nodeType": "IfStatement",
                  "src": "8069:61:9",
                  "trueBody": {
                    "id": 1406,
                    "nodeType": "Block",
                    "src": "8094:36:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 1404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8115:4:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1400,
                        "id": 1405,
                        "nodeType": "Return",
                        "src": "8108:11:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 1408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8146:5:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 1400,
                  "id": 1409,
                  "nodeType": "Return",
                  "src": "8139:12:9"
                }
              ]
            },
            "documentation": null,
            "id": 1411,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkIsCosmosAsset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1396,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1411,
                  "src": "8016:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8016:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8015:16:9"
            },
            "returnParameters": {
              "id": 1400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1399,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1411,
                  "src": "8053:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1398,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8053:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8052:6:9"
            },
            "scope": 1412,
            "src": "7988:170:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1413,
        "src": "548:7613:9"
      }
    ],
    "src": "0:8162:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x262f97360779b7c2bb05fd24ef49f22d51435f78d3abd1ab35c323b22064cd4d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_beneficiary",
              "type": "address"
            }
          ],
          "name": "LogBridgeTokenMint",
          "type": "event"
        },
        "0xcff57df3b42f67919a9300d211bb7fe56104ca34949da91116a8f82ff51bb777": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "_to",
              "type": "bytes"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_nonce",
              "type": "uint256"
            }
          ],
          "name": "LogBurn",
          "type": "event"
        },
        "0x374449c83a37309524754bbdfc5b8306d3694b5d14609b8fbb1b50cc5c0319a7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "_to",
              "type": "bytes"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_nonce",
              "type": "uint256"
            }
          ],
          "name": "LogLock",
          "type": "event"
        },
        "0x0ec4ab372af15f8db6003eb14d91402a44b20dff79fbac33b4ee0df68fafe9c0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            }
          ],
          "name": "LogNewBridgeToken",
          "type": "event"
        },
        "0x802cd873de701272ec903860b690986bd460b5bcd57e30ac1fdfdeece10528ac": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_token",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            }
          ],
          "name": "LogUnlock",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xA9263d2A0E1443A23B881211Ab34eE799ee4F0B1",
      "transactionHash": "0xdd6899b16122a7f42d84223f019a618ef2e54c6e15ac49a4ba9c89287e413e5d"
    }
  },
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-10-22T08:10:08.405Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "Bank contract which coordinates asset-related functionality.     CosmosBank manages the minting and burning of tokens which     represent Cosmos based assets, while EthereumBank manages     the locking and unlocking of Ethereum and ERC20 token assets     based on Ethereum.*",
    "methods": {},
    "title": "BridgeBank"
  },
  "userdoc": {
    "methods": {}
  }
}